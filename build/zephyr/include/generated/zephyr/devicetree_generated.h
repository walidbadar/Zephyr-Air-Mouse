/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/Users/walid/zephyrproject/zephyr/samples/application_development/air_mouse/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/interrupt-controller@e000e100
 *   5   /clocks
 *   6   /clocks/clk-hse
 *   7   /clocks/pll
 *   8   /soc/rcc@40021000
 *   9   /soc/pin-controller@48000000
 *   10  /soc/pin-controller@48000000/adc1_in1_pa0
 *   11  /soc/adc@50000000
 *   12  /dietemp
 *   13  /hid_dev_0
 *   14  /memory@10000000
 *   15  /memory@20000000
 *   16  /soc/pin-controller@48000000/i2c1_scl_pb6
 *   17  /soc/pin-controller@48000000/i2c1_sda_pb7
 *   18  /soc/i2c@40005400
 *   19  /smbus1
 *   20  /soc/pin-controller@48000000/i2c2_scl_pa9
 *   21  /soc/pin-controller@48000000/i2c2_sda_pa10
 *   22  /soc/i2c@40005800
 *   23  /smbus2
 *   24  /vbat
 *   25  /vref
 *   26  /clocks/clk-hsi
 *   27  /clocks/clk-lse
 *   28  /clocks/clk-lsi
 *   29  /cpus
 *   30  /cpus/cpu@0
 *   31  /soc/pin-controller@48000000/gpio@48000000
 *   32  /soc/pin-controller@48000000/gpio@48000800
 *   33  /soc/pin-controller@48000000/gpio@48000c00
 *   34  /gpio_keys
 *   35  /gpio_keys/button
 *   36  /gpio_keys/button_1
 *   37  /gpio_keys/button_2
 *   38  /gpio_keys/button_3
 *   39  /gpio_keys/button_4
 *   40  /soc/pin-controller@48000000/gpio@48001000
 *   41  /leds
 *   42  /leds/led_10
 *   43  /leds/led_3
 *   44  /leds/led_4
 *   45  /leds/led_5
 *   46  /leds/led_6
 *   47  /leds/led_7
 *   48  /leds/led_8
 *   49  /leds/led_9
 *   50  /soc/adc@50000100
 *   51  /soc/pin-controller@48000000/can_rx_pd0
 *   52  /soc/pin-controller@48000000/can_tx_pd1
 *   53  /soc/can@40006400
 *   54  /soc/pin-controller@48000000/dac_out1_pa4
 *   55  /soc/dac@40007400
 *   56  /soc/dma@40020000
 *   57  /soc/dma@40020400
 *   58  /soc/interrupt-controller@40010400
 *   59  /soc/pin-controller@48000000/usart2_rx_pa3
 *   60  /soc/pin-controller@48000000/usart2_tx_pa2
 *   61  /soc/rcc@40021000/reset-controller
 *   62  /soc/serial@40004400
 *   63  /soc/serial@40004800
 *   64  /soc/pin-controller@48000000/uart4_rx_pc11
 *   65  /soc/pin-controller@48000000/uart4_tx_pc10
 *   66  /soc/serial@40004c00
 *   67  /soc/serial@40005000
 *   68  /soc/pin-controller@48000000/usart1_rx_pc5
 *   69  /soc/pin-controller@48000000/usart1_tx_pc4
 *   70  /soc/serial@40013800
 *   71  /soc/pin-controller@48000000/spi2_miso_pb14
 *   72  /soc/pin-controller@48000000/spi2_mosi_pb15
 *   73  /soc/pin-controller@48000000/spi2_nss_pb12
 *   74  /soc/pin-controller@48000000/spi2_sck_pb13
 *   75  /soc/spi@40003800
 *   76  /soc/spi@40003c00
 *   77  /soc/pin-controller@48000000/spi1_miso_pa6
 *   78  /soc/pin-controller@48000000/spi1_mosi_pa7
 *   79  /soc/pin-controller@48000000/spi1_nss_pa4
 *   80  /soc/pin-controller@48000000/spi1_sck_pa5
 *   81  /soc/spi@40013000
 *   82  /soc/timer@e000e010
 *   83  /usbphy
 *   84  /soc/pin-controller@48000000/usb_dm_pa11
 *   85  /soc/pin-controller@48000000/usb_dp_pa12
 *   86  /soc/usb@40005c00
 *   87  /soc/watchdog@40002c00
 *   88  /soc/watchdog@40003000
 *   89  /soc/flash-controller@40022000
 *   90  /soc/flash-controller@40022000/flash@8000000
 *   91  /soc/flash-controller@40022000/flash@8000000/partitions
 *   92  /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *   93  /soc/i2c@40005400/lsm303dlhc-accel@19
 *   94  /soc/i2c@40005400/lsm303dlhc-magn@1e
 *   95  /soc/pin-controller@48000000/gpio@48000400
 *   96  /soc/pin-controller@48000000/gpio@48001400
 *   97  /soc/rtc@40002800
 *   98  /soc/rtc@40002800/backup_regs
 *   99  /soc/timers@40000000
 *   100 /soc/timers@40000000/counter
 *   101 /soc/timers@40000000/pwm
 *   102 /soc/timers@40000400
 *   103 /soc/timers@40000400/counter
 *   104 /soc/timers@40000400/pwm
 *   105 /soc/timers@40000800
 *   106 /soc/timers@40000800/pwm
 *   107 /soc/timers@40001000
 *   108 /soc/timers@40001000/counter
 *   109 /soc/timers@40001400
 *   110 /soc/timers@40001400/counter
 *   111 /soc/timers@40012c00
 *   112 /soc/pin-controller@48000000/tim1_ch1_pa8
 *   113 /soc/timers@40012c00/pwm
 *   114 /soc/timers@40013400
 *   115 /soc/timers@40013400/pwm
 *   116 /soc/timers@40014000
 *   117 /soc/timers@40014000/counter
 *   118 /soc/timers@40014000/pwm
 *   119 /soc/timers@40014400
 *   120 /soc/timers@40014400/counter
 *   121 /soc/timers@40014400/pwm
 *   122 /soc/timers@40014800
 *   123 /soc/timers@40014800/counter
 *   124 /soc/timers@40014800/pwm
 *   125 /soc/timers@40015000
 *   126 /soc/timers@40015000/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 16
#define DT_N_CHILD_NUM_STATUS_OKAY 14
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_hid_dev_0)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hid_dev_0)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_hid_dev_0)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hid_dev_0)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hid_dev_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	5, /* /clocks */ \
	12, /* /dietemp */ \
	13, /* /hid_dev_0 */ \
	14, /* /memory@10000000 */ \
	15, /* /memory@20000000 */ \
	19, /* /smbus1 */ \
	23, /* /smbus2 */ \
	24, /* /vbat */ \
	25, /* /vref */ \
	29, /* /cpus */ \
	34, /* /gpio_keys */ \
	41, /* /leds */ \
	83, /* /usbphy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32f3discovery DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_st_stm32f3discovery 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32f3discovery"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32f3discovery"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "st,stm32f3discovery"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f3discovery
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32f3discovery
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F3DISCOVERY
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 37
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 21
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_usb_40005c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40015000) fn(DT_N_S_soc_S_adc_50000000) fn(DT_N_S_soc_S_adc_50000100) fn(DT_N_S_soc_S_dma_40020400)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020400)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000100, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_usb_40005c00) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_adc_50000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */ \
	11, /* /soc/adc@50000000 */ \
	18, /* /soc/i2c@40005400 */ \
	22, /* /soc/i2c@40005800 */ \
	50, /* /soc/adc@50000100 */ \
	53, /* /soc/can@40006400 */ \
	55, /* /soc/dac@40007400 */ \
	56, /* /soc/dma@40020000 */ \
	57, /* /soc/dma@40020400 */ \
	58, /* /soc/interrupt-controller@40010400 */ \
	62, /* /soc/serial@40004400 */ \
	63, /* /soc/serial@40004800 */ \
	66, /* /soc/serial@40004c00 */ \
	67, /* /soc/serial@40005000 */ \
	70, /* /soc/serial@40013800 */ \
	75, /* /soc/spi@40003800 */ \
	76, /* /soc/spi@40003c00 */ \
	81, /* /soc/spi@40013000 */ \
	82, /* /soc/timer@e000e010 */ \
	86, /* /soc/usb@40005c00 */ \
	87, /* /soc/watchdog@40002c00 */ \
	88, /* /soc/watchdog@40003000 */ \
	89, /* /soc/flash-controller@40022000 */ \
	97, /* /soc/rtc@40002800 */ \
	99, /* /soc/timers@40000000 */ \
	102, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000800 */ \
	107, /* /soc/timers@40001000 */ \
	109, /* /soc/timers@40001400 */ \
	111, /* /soc/timers@40012c00 */ \
	114, /* /soc/timers@40013400 */ \
	116, /* /soc/timers@40014000 */ \
	119, /* /soc/timers@40014400 */ \
	122, /* /soc/timers@40014800 */ \
	125, /* /soc/timers@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32f303 DT_N_S_soc
#define DT_N_INST_0_st_stm32f3   DT_N_S_soc
#define DT_N_INST_0_simple_bus   DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32f303 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32f303"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32f3 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32f3"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"st,stm32f303", "st,stm32f3", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32f303"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f303
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32f303
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F303
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32f3"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32f3
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32f3
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32F3
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	11, /* /soc/adc@50000000 */ \
	18, /* /soc/i2c@40005400 */ \
	22, /* /soc/i2c@40005800 */ \
	50, /* /soc/adc@50000100 */ \
	53, /* /soc/can@40006400 */ \
	56, /* /soc/dma@40020000 */ \
	57, /* /soc/dma@40020400 */ \
	58, /* /soc/interrupt-controller@40010400 */ \
	62, /* /soc/serial@40004400 */ \
	63, /* /soc/serial@40004800 */ \
	66, /* /soc/serial@40004c00 */ \
	67, /* /soc/serial@40005000 */ \
	70, /* /soc/serial@40013800 */ \
	75, /* /soc/spi@40003800 */ \
	76, /* /soc/spi@40003c00 */ \
	81, /* /soc/spi@40013000 */ \
	86, /* /soc/usb@40005c00 */ \
	87, /* /soc/watchdog@40002c00 */ \
	89, /* /soc/flash-controller@40022000 */ \
	97, /* /soc/rtc@40002800 */ \
	99, /* /soc/timers@40000000 */ \
	102, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000800 */ \
	107, /* /soc/timers@40001000 */ \
	109, /* /soc/timers@40001400 */ \
	111, /* /soc/timers@40012c00 */ \
	114, /* /soc/timers@40013400 */ \
	116, /* /soc/timers@40014000 */ \
	119, /* /soc/timers@40014400 */ \
	122, /* /soc/timers@40014800 */ \
	125, /* /soc/timers@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"
#define DT_N_S_clocks_FULL_NAME_UNQUOTED clocks
#define DT_N_S_clocks_FULL_NAME_TOKEN clocks
#define DT_N_S_clocks_FULL_NAME_UPPER_TOKEN CLOCKS

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_clocks_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 5
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_clocks_HASH 3P3fmk_q5wPvaymGA6NeomHHBb_cCfQX2PaKw_k1t_w

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5
#define DT_N_S_clocks_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/clk-hse */ \
	7, /* /clocks/pll */ \
	26, /* /clocks/clk-hsi */ \
	27, /* /clocks/clk-lse */ \
	28, /* /clocks/clk-lsi */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_UNQUOTED clk-hse
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_TOKEN clk_hse
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_UPPER_TOKEN CLK_HSE

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL(fn) fn(clk_hse)
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hse, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_hse_HASH CHg50lhzojbh1fYYqBOhbjZFQvgn2_C8kiV4EgV0j3Y

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 6
#define DT_N_S_clocks_S_clk_hse_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	7, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 1
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_css_enabled 0
#define DT_N_S_clocks_S_clk_hse_P_css_enabled_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status "okay"
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hse, status, 0)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse, status, 0)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_status_LEN 1
#define DT_N_S_clocks_S_clk_hse_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_compatible {"st,stm32-hse-clock"}
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0 "st,stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-hse-clock
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_TOKEN st_stm32_hse_clock
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_HSE_CLOCK
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hse, compatible, 0)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse, compatible, 0)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hse_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hse_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hse_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hse_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32f0-pll-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32f0-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"
#define DT_N_S_clocks_S_pll_FULL_NAME_UNQUOTED pll
#define DT_N_S_clocks_S_pll_FULL_NAME_TOKEN pll
#define DT_N_S_clocks_S_pll_FULL_NAME_UPPER_TOKEN PLL

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL(fn) fn(pll)
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_pll_HASH MENiPNxcjOF6dwaYSdS9Iq0tqHDbWKghVscDDRncn0o

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 7
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	6, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	8, /* /soc/rcc@40021000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32f0_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32f0_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32f0-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_mul 9
#define DT_N_S_clocks_S_pll_P_mul_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_prediv 1
#define DT_N_S_clocks_S_pll_P_prediv_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_pll_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_LEN 1
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32f0-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32f0-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f0-pll-clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32f0_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F0_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000
 *
 * Node identifier: DT_N_S_soc_S_rcc_40021000
 *
 * Binding (compatible = st,stm32f3-rcc):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32f3-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40021000_PATH "/soc/rcc@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME "rcc@40021000"
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME_UNQUOTED rcc@40021000
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME_TOKEN rcc_40021000
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME_UPPER_TOKEN RCC_40021000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40021000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_40021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_40021000_FOREACH_NODELABEL(fn) fn(rcc)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rcc, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40021000_CHILD_NUM 1
#define DT_N_S_soc_S_rcc_40021000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_rcc_40021000_HASH 9dpgZGnFDhzfr3szN5sIDHeylLss1yadXzhaTcERMgU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40021000_ORD 8
#define DT_N_S_soc_S_rcc_40021000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40021000_REQUIRES_ORDS \
	3, /* /soc */ \
	7, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40021000_SUPPORTS_ORDS \
	11, /* /soc/adc@50000000 */ \
	18, /* /soc/i2c@40005400 */ \
	22, /* /soc/i2c@40005800 */ \
	31, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	32, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	50, /* /soc/adc@50000100 */ \
	53, /* /soc/can@40006400 */ \
	55, /* /soc/dac@40007400 */ \
	56, /* /soc/dma@40020000 */ \
	57, /* /soc/dma@40020400 */ \
	61, /* /soc/rcc@40021000/reset-controller */ \
	62, /* /soc/serial@40004400 */ \
	63, /* /soc/serial@40004800 */ \
	66, /* /soc/serial@40004c00 */ \
	67, /* /soc/serial@40005000 */ \
	70, /* /soc/serial@40013800 */ \
	75, /* /soc/spi@40003800 */ \
	76, /* /soc/spi@40003c00 */ \
	81, /* /soc/spi@40013000 */ \
	86, /* /soc/usb@40005c00 */ \
	87, /* /soc/watchdog@40002c00 */ \
	89, /* /soc/flash-controller@40022000 */ \
	95, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	96, /* /soc/pin-controller@48000000/gpio@48001400 */ \
	97, /* /soc/rtc@40002800 */ \
	99, /* /soc/timers@40000000 */ \
	102, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000800 */ \
	107, /* /soc/timers@40001000 */ \
	109, /* /soc/timers@40001400 */ \
	111, /* /soc/timers@40012c00 */ \
	114, /* /soc/timers@40013400 */ \
	116, /* /soc/timers@40014000 */ \
	119, /* /soc/timers@40014400 */ \
	122, /* /soc/timers@40014800 */ \
	125, /* /soc/timers@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_EXISTS 1
#define DT_N_INST_0_st_stm32f3_rcc DT_N_S_soc_S_rcc_40021000
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40021000_REG_NUM 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MATCHES_st_stm32f3_rcc 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0 "stm32f3-rcc"
#define DT_N_S_soc_S_rcc_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency 72000000
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler 2
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention 0
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible {"st,stm32f3-rcc"}
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0 "st,stm32f3-rcc"
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f3-rcc
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_TOKEN st_stm32f3_rcc
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F3_RCC
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_PATH "/soc/pin-controller@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME "pin-controller@48000000"
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME_UNQUOTED pin-controller@48000000
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME_TOKEN pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER_48000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_CHILD_NUM 31
#define DT_N_S_soc_S_pin_controller_48000000_CHILD_NUM_STATUS_OKAY 31
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_HASH t9nOZVnIU1TMOZorPnXPYV59gij_PefzrEfm0_7N_5g

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_ORD 9
#define DT_N_S_soc_S_pin_controller_48000000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_SUPPORTS_ORDS \
	10, /* /soc/pin-controller@48000000/adc1_in1_pa0 */ \
	16, /* /soc/pin-controller@48000000/i2c1_scl_pb6 */ \
	17, /* /soc/pin-controller@48000000/i2c1_sda_pb7 */ \
	20, /* /soc/pin-controller@48000000/i2c2_scl_pa9 */ \
	21, /* /soc/pin-controller@48000000/i2c2_sda_pa10 */ \
	31, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	32, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	51, /* /soc/pin-controller@48000000/can_rx_pd0 */ \
	52, /* /soc/pin-controller@48000000/can_tx_pd1 */ \
	54, /* /soc/pin-controller@48000000/dac_out1_pa4 */ \
	59, /* /soc/pin-controller@48000000/usart2_rx_pa3 */ \
	60, /* /soc/pin-controller@48000000/usart2_tx_pa2 */ \
	64, /* /soc/pin-controller@48000000/uart4_rx_pc11 */ \
	65, /* /soc/pin-controller@48000000/uart4_tx_pc10 */ \
	68, /* /soc/pin-controller@48000000/usart1_rx_pc5 */ \
	69, /* /soc/pin-controller@48000000/usart1_tx_pc4 */ \
	71, /* /soc/pin-controller@48000000/spi2_miso_pb14 */ \
	72, /* /soc/pin-controller@48000000/spi2_mosi_pb15 */ \
	73, /* /soc/pin-controller@48000000/spi2_nss_pb12 */ \
	74, /* /soc/pin-controller@48000000/spi2_sck_pb13 */ \
	77, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	78, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	79, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	80, /* /soc/pin-controller@48000000/spi1_sck_pa5 */ \
	84, /* /soc/pin-controller@48000000/usb_dm_pa11 */ \
	85, /* /soc/pin-controller@48000000/usb_dp_pa12 */ \
	95, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	96, /* /soc/pin-controller@48000000/gpio@48001400 */ \
	112, /* /soc/pin-controller@48000000/tim1_ch1_pa8 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_48000000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_SIZE 6144 /* 0x1800 */
#define DT_N_S_soc_S_pin_controller_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_P_reg {1207959552 /* 0x48000000 */, 6144 /* 0x1800 */}
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1 6144
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_PATH "/soc/pin-controller@48000000/adc1_in1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FULL_NAME "adc1_in1_pa0"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FULL_NAME_UNQUOTED adc1_in1_pa0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FULL_NAME_TOKEN adc1_in1_pa0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FULL_NAME_UPPER_TOKEN ADC1_IN1_PA0

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_NODELABEL(fn) fn(adc1_in1_pa0)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1_in1_pa0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_HASH 2HKLtzl3kbxDYZ9ZNKN0iNE3O_U51kbX8hpLibDCNFs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_ORD 10
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_SUPPORTS_ORDS \
	11, /* /soc/adc@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_EXISTS 1
#define DT_N_NODELABEL_adc1_in1_pa0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@50000000
 *
 * Node identifier: DT_N_S_soc_S_adc_50000000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50000000_PATH "/soc/adc@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50000000_FULL_NAME "adc@50000000"
#define DT_N_S_soc_S_adc_50000000_FULL_NAME_UNQUOTED adc@50000000
#define DT_N_S_soc_S_adc_50000000_FULL_NAME_TOKEN adc_50000000
#define DT_N_S_soc_S_adc_50000000_FULL_NAME_UPPER_TOKEN ADC_50000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50000000_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_50000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_50000000_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_50000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_50000000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_50000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_50000000_HASH sG6HR49ljr8TIUKEqdvb5cF7Fn342vIm_9put_XU4Bw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50000000_ORD 11
#define DT_N_S_soc_S_adc_50000000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50000000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000/adc1_in1_pa0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50000000_SUPPORTS_ORDS \
	12, /* /dietemp */ \
	24, /* /vbat */ \
	25, /* /vref */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_50000000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50000000_REG_NUM 1
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_50000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_50000000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_50000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_50000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_50000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_50000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50000000_P_reg {1342177280 /* 0x50000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, clocks, 0)
#define DT_N_S_soc_S_adc_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, clocks, 0)
#define DT_N_S_soc_S_adc_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source "SYNC"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_STRING_UNQUOTED SYNC
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_STRING_TOKEN SYNC
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_STRING_UPPER_TOKEN SYNC
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_IDX_0 "SYNC"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_IDX_0_ENUM_VAL_SYNC_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, st_adc_clock_source, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, st_adc_clock_source, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_clock_source_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_prescaler 2
#define DT_N_S_soc_S_adc_50000000_P_st_adc_prescaler_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_prescaler_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_vref_mv 3000
#define DT_N_S_soc_S_adc_50000000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_resolutions {6316812 /* 0x60630c */, 5333772 /* 0x51630c */, 4350732 /* 0x42630c */, 3367692 /* 0x33630c */}
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_0 6316812
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_1 5333772
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_2 4350732
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_resolutions_IDX_3 3367692
#define DT_N_S_soc_S_adc_50000000_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 3)
#define DT_N_S_soc_S_adc_50000000_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 3)
#define DT_N_S_soc_S_adc_50000000_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_50000000_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times {2 /* 0x2 */, 3 /* 0x3 */, 5 /* 0x5 */, 8 /* 0x8 */, 20 /* 0x14 */, 62 /* 0x3e */, 182 /* 0xb6 */, 602 /* 0x25a */}
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_0 2
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_1 3
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_2 5
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_3 8
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_4 20
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_5 62
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_6 182
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_IDX_7 602
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 7)
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 7)
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_50000000_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer "FULLY_CONFIGURABLE"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_STRING_UNQUOTED FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_STRING_TOKEN FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_STRING_UPPER_TOKEN FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_IDX_0 "FULLY_CONFIGURABLE"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_IDX_0_ENUM_VAL_FULLY_CONFIGURABLE_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, st_adc_sequencer, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, st_adc_sequencer, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_sequencer, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_sequencer, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler "OVERSAMPLER_NONE"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_STRING_UNQUOTED OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_STRING_TOKEN OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_STRING_UPPER_TOKEN OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_IDX_0 "OVERSAMPLER_NONE"
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_IDX_0_ENUM_VAL_OVERSAMPLER_NONE_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, st_adc_oversampler, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, st_adc_oversampler, 0)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_oversampler, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, st_adc_oversampler, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_st_adc_oversampler_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_status "okay"
#define DT_N_S_soc_S_adc_50000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, status, 0)
#define DT_N_S_soc_S_adc_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, status, 0)
#define DT_N_S_soc_S_adc_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_status_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, compatible, 0)
#define DT_N_S_soc_S_adc_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, compatible, 0)
#define DT_N_S_soc_S_adc_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_50000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"
#define DT_N_S_dietemp_FULL_NAME_UNQUOTED dietemp
#define DT_N_S_dietemp_FULL_NAME_TOKEN dietemp
#define DT_N_S_dietemp_FULL_NAME_UPPER_TOKEN DIETEMP

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_dietemp_NODELABEL_NUM 1
#define DT_N_S_dietemp_FOREACH_NODELABEL(fn) fn(die_temp)
#define DT_N_S_dietemp_FOREACH_NODELABEL_VARGS(fn, ...) fn(die_temp, __VA_ARGS__)
#define DT_N_S_dietemp_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_CHILD_NUM 0
#define DT_N_S_dietemp_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_dietemp_HASH 1P3ft3QMjkFq1eBnbB6dz9pZsoSMwhVrPGe82Fpxz6c

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 12
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/adc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_ALIAS_die_temp0          DT_N_S_dietemp
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_IRQ_LEVEL 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_ts_cal2_addr 536868802
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 110
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_addr 536868792
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3300
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 12
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_ENUM_IDX 0
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_ENUM_VAL_12_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_status "okay"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED okay
#define DT_N_S_dietemp_P_status_STRING_TOKEN okay
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_dietemp_P_status_IDX_0 "okay"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-temp-cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_50000000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 16
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_deferred_init 0
#define DT_N_S_dietemp_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /hid_dev_0
 *
 * Node identifier: DT_N_S_hid_dev_0
 *
 * Binding (compatible = zephyr,hid-device):
 *   $ZEPHYR_BASE\dts\bindings\usb\zephyr,hid-device.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_hid_dev_0_PATH "/hid_dev_0"

/* Node's name with unit-address: */
#define DT_N_S_hid_dev_0_FULL_NAME "hid_dev_0"
#define DT_N_S_hid_dev_0_FULL_NAME_UNQUOTED hid_dev_0
#define DT_N_S_hid_dev_0_FULL_NAME_TOKEN hid_dev_0
#define DT_N_S_hid_dev_0_FULL_NAME_UPPER_TOKEN HID_DEV_0

/* Node parent (/) identifier: */
#define DT_N_S_hid_dev_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_hid_dev_0_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_hid_dev_0_NODELABEL_NUM 1
#define DT_N_S_hid_dev_0_FOREACH_NODELABEL(fn) fn(hid_dev_0)
#define DT_N_S_hid_dev_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(hid_dev_0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_hid_dev_0_CHILD_NUM 0
#define DT_N_S_hid_dev_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_hid_dev_0_FOREACH_CHILD(fn) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_hid_dev_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_hid_dev_0_HASH eiqxEIHjQApbjE5VuSKtCq29wqUUIMzjMpVZbhbaW3o

/* Node's dependency ordinal: */
#define DT_N_S_hid_dev_0_ORD 13
#define DT_N_S_hid_dev_0_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_hid_dev_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_hid_dev_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_hid_dev_0_EXISTS 1
#define DT_N_INST_0_zephyr_hid_device DT_N_S_hid_dev_0
#define DT_N_NODELABEL_hid_dev_0      DT_N_S_hid_dev_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_hid_dev_0_REG_NUM 0
#define DT_N_S_hid_dev_0_RANGES_NUM 0
#define DT_N_S_hid_dev_0_FOREACH_RANGE(fn) 
#define DT_N_S_hid_dev_0_IRQ_NUM 0
#define DT_N_S_hid_dev_0_IRQ_LEVEL 0
#define DT_N_S_hid_dev_0_COMPAT_MATCHES_zephyr_hid_device 1
#define DT_N_S_hid_dev_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_hid_dev_0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_hid_dev_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_hid_dev_0_COMPAT_MODEL_IDX_0 "hid-device"
#define DT_N_S_hid_dev_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_hid_dev_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_hid_dev_0_P_interface_name "HID0"
#define DT_N_S_hid_dev_0_P_interface_name_STRING_UNQUOTED HID0
#define DT_N_S_hid_dev_0_P_interface_name_STRING_TOKEN HID0
#define DT_N_S_hid_dev_0_P_interface_name_STRING_UPPER_TOKEN HID0
#define DT_N_S_hid_dev_0_P_interface_name_IDX_0 "HID0"
#define DT_N_S_hid_dev_0_P_interface_name_IDX_0_EXISTS 1
#define DT_N_S_hid_dev_0_P_interface_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_hid_dev_0, interface_name, 0)
#define DT_N_S_hid_dev_0_P_interface_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_hid_dev_0, interface_name, 0)
#define DT_N_S_hid_dev_0_P_interface_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_hid_dev_0, interface_name, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_interface_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_hid_dev_0, interface_name, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_interface_name_LEN 1
#define DT_N_S_hid_dev_0_P_interface_name_EXISTS 1
#define DT_N_S_hid_dev_0_P_protocol_code "none"
#define DT_N_S_hid_dev_0_P_protocol_code_STRING_UNQUOTED none
#define DT_N_S_hid_dev_0_P_protocol_code_STRING_TOKEN none
#define DT_N_S_hid_dev_0_P_protocol_code_STRING_UPPER_TOKEN NONE
#define DT_N_S_hid_dev_0_P_protocol_code_IDX_0 "none"
#define DT_N_S_hid_dev_0_P_protocol_code_IDX_0_EXISTS 1
#define DT_N_S_hid_dev_0_P_protocol_code_IDX_0_ENUM_IDX 0
#define DT_N_S_hid_dev_0_P_protocol_code_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_hid_dev_0_P_protocol_code_FOREACH_PROP_ELEM(fn) fn(DT_N_S_hid_dev_0, protocol_code, 0)
#define DT_N_S_hid_dev_0_P_protocol_code_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_hid_dev_0, protocol_code, 0)
#define DT_N_S_hid_dev_0_P_protocol_code_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_hid_dev_0, protocol_code, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_protocol_code_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_hid_dev_0, protocol_code, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_protocol_code_LEN 1
#define DT_N_S_hid_dev_0_P_protocol_code_EXISTS 1
#define DT_N_S_hid_dev_0_P_in_report_size 64
#define DT_N_S_hid_dev_0_P_in_report_size_EXISTS 1
#define DT_N_S_hid_dev_0_P_in_polling_period_us 1000
#define DT_N_S_hid_dev_0_P_in_polling_period_us_EXISTS 1
#define DT_N_S_hid_dev_0_P_compatible {"zephyr,hid-device"}
#define DT_N_S_hid_dev_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_hid_dev_0_P_compatible_IDX_0 "zephyr,hid-device"
#define DT_N_S_hid_dev_0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,hid-device
#define DT_N_S_hid_dev_0_P_compatible_IDX_0_STRING_TOKEN zephyr_hid_device
#define DT_N_S_hid_dev_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_HID_DEVICE
#define DT_N_S_hid_dev_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_hid_dev_0, compatible, 0)
#define DT_N_S_hid_dev_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_hid_dev_0, compatible, 0)
#define DT_N_S_hid_dev_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_hid_dev_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_hid_dev_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_hid_dev_0_P_compatible_LEN 1
#define DT_N_S_hid_dev_0_P_compatible_EXISTS 1
#define DT_N_S_hid_dev_0_P_zephyr_deferred_init 0
#define DT_N_S_hid_dev_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_hid_dev_0_P_wakeup_source 0
#define DT_N_S_hid_dev_0_P_wakeup_source_EXISTS 1
#define DT_N_S_hid_dev_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_hid_dev_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@10000000
 *
 * Node identifier: DT_N_S_memory_10000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_10000000_PATH "/memory@10000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_10000000_FULL_NAME "memory@10000000"
#define DT_N_S_memory_10000000_FULL_NAME_UNQUOTED memory@10000000
#define DT_N_S_memory_10000000_FULL_NAME_TOKEN memory_10000000
#define DT_N_S_memory_10000000_FULL_NAME_UPPER_TOKEN MEMORY_10000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_10000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_10000000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_10000000_NODELABEL_NUM 1
#define DT_N_S_memory_10000000_FOREACH_NODELABEL(fn) fn(ccm0)
#define DT_N_S_memory_10000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ccm0, __VA_ARGS__)
#define DT_N_S_memory_10000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_10000000_CHILD_NUM 0
#define DT_N_S_memory_10000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_10000000_HASH 6bf8mI9ltrZ_8RxtsC_CoudtIJvcGnTP6xk2meUpGW4

/* Node's dependency ordinal: */
#define DT_N_S_memory_10000000_ORD 14
#define DT_N_S_memory_10000000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_10000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_10000000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_memory_10000000
#define DT_N_INST_0_st_stm32_ccm         DT_N_S_memory_10000000
#define DT_N_NODELABEL_ccm0              DT_N_S_memory_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_10000000_REG_NUM 1
#define DT_N_S_memory_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_memory_10000000_RANGES_NUM 0
#define DT_N_S_memory_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_10000000_IRQ_NUM 0
#define DT_N_S_memory_10000000_IRQ_LEVEL 0
#define DT_N_S_memory_10000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_10000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_10000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_10000000_COMPAT_MATCHES_st_stm32_ccm 1
#define DT_N_S_memory_10000000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_memory_10000000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_COMPAT_MODEL_IDX_1 "stm32-ccm"
#define DT_N_S_memory_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_10000000_P_zephyr_memory_region "CCM"
#define DT_N_S_memory_10000000_P_zephyr_memory_region_STRING_UNQUOTED CCM
#define DT_N_S_memory_10000000_P_zephyr_memory_region_STRING_TOKEN CCM
#define DT_N_S_memory_10000000_P_zephyr_memory_region_STRING_UPPER_TOKEN CCM
#define DT_N_S_memory_10000000_P_zephyr_memory_region_IDX_0 "CCM"
#define DT_N_S_memory_10000000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_10000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible {"zephyr,memory-region", "st,stm32-ccm"}
#define DT_N_S_memory_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_10000000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_10000000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_10000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_IDX_1 "st,stm32-ccm"
#define DT_N_S_memory_10000000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-ccm
#define DT_N_S_memory_10000000_P_compatible_IDX_1_STRING_TOKEN st_stm32_ccm
#define DT_N_S_memory_10000000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_CCM
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, compatible, 0) \
	fn(DT_N_S_memory_10000000, compatible, 1)
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_10000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_10000000, compatible, 1)
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_10000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_10000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_10000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_10000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_compatible_LEN 2
#define DT_N_S_memory_10000000_P_compatible_EXISTS 1
#define DT_N_S_memory_10000000_P_reg {268435456 /* 0x10000000 */, 8192 /* 0x2000 */}
#define DT_N_S_memory_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_IDX_1 8192
#define DT_N_S_memory_10000000_P_reg_EXISTS 1
#define DT_N_S_memory_10000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_10000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_10000000_P_wakeup_source 0
#define DT_N_S_memory_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_20000000_HASH Ppv28MrjF0V_ocFctWWy62TJJRdbnlSCTerwKpAvZ6U

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 15
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 40960 /* 0xa000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 40960 /* 0xa000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 40960
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@48000000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME_UNQUOTED i2c1_scl_pb6
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME_TOKEN i2c1_scl_pb6
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME_UPPER_TOKEN I2C1_SCL_PB6

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_NODELABEL(fn) fn(i2c1_scl_pb6)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_scl_pb6, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_HASH tVB5EFwevYg82SATgwGLM4qzQE5c_vTR639CqsG4l08

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_ORD 16
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_SUPPORTS_ORDS \
	18, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux 708
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PATH "/soc/pin-controller@48000000/i2c1_sda_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME "i2c1_sda_pb7"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME_UNQUOTED i2c1_sda_pb7
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME_TOKEN i2c1_sda_pb7
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME_UPPER_TOKEN I2C1_SDA_PB7

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_NODELABEL(fn) fn(i2c1_sda_pb7)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_sda_pb7, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_HASH ndpTPyWq_K7Q8siTWEEWxzPe7_5OqoI46FU7iIhA27Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_ORD 17
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_SUPPORTS_ORDS \
	18, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb7 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux 740
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_UNQUOTED i2c@40005400
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_TOKEN i2c_40005400
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_UPPER_TOKEN I2C_40005400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005400_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM 2
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40005400_HASH qdcoGqslkp_qGZ59SAaN4H47YRea2PU_8MI_v34YdEo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 18
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	16, /* /soc/pin-controller@48000000/i2c1_scl_pb6 */ \
	17, /* /soc/pin-controller@48000000/i2c1_sda_pb7 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	19, /* /smbus1 */ \
	93, /* /soc/i2c@40005400/lsm303dlhc-accel@19 */ \
	94, /* /soc/i2c@40005400/lsm303dlhc-magn@1e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_VAL_bus 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_VAL_bits 74800
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, clocks, 1)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, clocks, 1)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus1
 *
 * Node identifier: DT_N_S_smbus1
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus1_PATH "/smbus1"

/* Node's name with unit-address: */
#define DT_N_S_smbus1_FULL_NAME "smbus1"
#define DT_N_S_smbus1_FULL_NAME_UNQUOTED smbus1
#define DT_N_S_smbus1_FULL_NAME_TOKEN smbus1
#define DT_N_S_smbus1_FULL_NAME_UPPER_TOKEN SMBUS1

/* Node parent (/) identifier: */
#define DT_N_S_smbus1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus1_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus1_NODELABEL_NUM 1
#define DT_N_S_smbus1_FOREACH_NODELABEL(fn) fn(smbus1)
#define DT_N_S_smbus1_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus1, __VA_ARGS__)
#define DT_N_S_smbus1_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus1_CHILD_NUM 0
#define DT_N_S_smbus1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus1_FOREACH_CHILD(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_smbus1_HASH RRjxCtQo8vEaNES3pUGCHfX2Mp6H0kS5wnsZuRpKBrY

/* Node's dependency ordinal: */
#define DT_N_S_smbus1_ORD 19
#define DT_N_S_smbus1_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus1_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus1_EXISTS 1
#define DT_N_INST_0_st_stm32_smbus DT_N_S_smbus1
#define DT_N_NODELABEL_smbus1      DT_N_S_smbus1

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus1_REG_NUM 0
#define DT_N_S_smbus1_RANGES_NUM 0
#define DT_N_S_smbus1_FOREACH_RANGE(fn) 
#define DT_N_S_smbus1_IRQ_NUM 0
#define DT_N_S_smbus1_IRQ_LEVEL 0
#define DT_N_S_smbus1_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus1_P_i2c DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_LEN 1
#define DT_N_S_smbus1_P_i2c_EXISTS 1
#define DT_N_S_smbus1_P_status "disabled"
#define DT_N_S_smbus1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus1_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_IDX_0 "disabled"
#define DT_N_S_smbus1_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_LEN 1
#define DT_N_S_smbus1_P_status_EXISTS 1
#define DT_N_S_smbus1_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_LEN 1
#define DT_N_S_smbus1_P_compatible_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_deferred_init 0
#define DT_N_S_smbus1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus1_P_wakeup_source 0
#define DT_N_S_smbus1_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_scl_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_PATH "/soc/pin-controller@48000000/i2c2_scl_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FULL_NAME "i2c2_scl_pa9"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FULL_NAME_UNQUOTED i2c2_scl_pa9
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FULL_NAME_TOKEN i2c2_scl_pa9
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FULL_NAME_UPPER_TOKEN I2C2_SCL_PA9

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_NODELABEL(fn) fn(i2c2_scl_pa9)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2_scl_pa9, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_HASH 7eRX_QDWVItor2jHewMagyutGZJbx__6epDW1SOuLig

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_ORD 20
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_SUPPORTS_ORDS \
	22, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pa9 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_pinmux 292
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_sda_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_PATH "/soc/pin-controller@48000000/i2c2_sda_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FULL_NAME "i2c2_sda_pa10"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FULL_NAME_UNQUOTED i2c2_sda_pa10
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FULL_NAME_TOKEN i2c2_sda_pa10
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FULL_NAME_UPPER_TOKEN I2C2_SDA_PA10

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_NODELABEL(fn) fn(i2c2_sda_pa10)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2_sda_pa10, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_HASH bvHeMpJd_EOZmRwMky9gR8jKLQutkOCGwD6An2ex4jg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_ORD 21
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_SUPPORTS_ORDS \
	22, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pa10 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_pinmux 324
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_UNQUOTED i2c@40005800
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_TOKEN i2c_40005800
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_UPPER_TOKEN I2C_40005800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005800_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL(fn) fn(i2c2)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40005800_HASH eB73TQqq_PUOgKTcnvcwzuS4tWCFU0fUXyPb0bwWGkQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 22
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	20, /* /soc/pin-controller@48000000/i2c2_scl_pa9 */ \
	21, /* /soc/pin-controller@48000000/i2c2_sda_pa10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	23, /* /smbus2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_VAL_bus 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_VAL_bits 75056
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, clocks, 1)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, clocks, 1)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus2
 *
 * Node identifier: DT_N_S_smbus2
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus2_PATH "/smbus2"

/* Node's name with unit-address: */
#define DT_N_S_smbus2_FULL_NAME "smbus2"
#define DT_N_S_smbus2_FULL_NAME_UNQUOTED smbus2
#define DT_N_S_smbus2_FULL_NAME_TOKEN smbus2
#define DT_N_S_smbus2_FULL_NAME_UPPER_TOKEN SMBUS2

/* Node parent (/) identifier: */
#define DT_N_S_smbus2_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus2_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus2_NODELABEL_NUM 1
#define DT_N_S_smbus2_FOREACH_NODELABEL(fn) fn(smbus2)
#define DT_N_S_smbus2_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus2, __VA_ARGS__)
#define DT_N_S_smbus2_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus2_CHILD_NUM 0
#define DT_N_S_smbus2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus2_FOREACH_CHILD(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_smbus2_HASH CeKsUeBLVHACPFrmleKnxYHTPUYQ02SrNC2w1a_Vmm4

/* Node's dependency ordinal: */
#define DT_N_S_smbus2_ORD 23
#define DT_N_S_smbus2_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus2_REQUIRES_ORDS \
	0, /* / */ \
	22, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus2_EXISTS 1
#define DT_N_INST_1_st_stm32_smbus DT_N_S_smbus2
#define DT_N_NODELABEL_smbus2      DT_N_S_smbus2

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus2_REG_NUM 0
#define DT_N_S_smbus2_RANGES_NUM 0
#define DT_N_S_smbus2_FOREACH_RANGE(fn) 
#define DT_N_S_smbus2_IRQ_NUM 0
#define DT_N_S_smbus2_IRQ_LEVEL 0
#define DT_N_S_smbus2_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus2_P_i2c DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_LEN 1
#define DT_N_S_smbus2_P_i2c_EXISTS 1
#define DT_N_S_smbus2_P_status "disabled"
#define DT_N_S_smbus2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus2_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_IDX_0 "disabled"
#define DT_N_S_smbus2_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus2_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_LEN 1
#define DT_N_S_smbus2_P_status_EXISTS 1
#define DT_N_S_smbus2_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_LEN 1
#define DT_N_S_smbus2_P_compatible_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_deferred_init 0
#define DT_N_S_smbus2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus2_P_wakeup_source 0
#define DT_N_S_smbus2_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbat
 *
 * Node identifier: DT_N_S_vbat
 *
 * Binding (compatible = st,stm32-vbat):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_PATH "/vbat"

/* Node's name with unit-address: */
#define DT_N_S_vbat_FULL_NAME "vbat"
#define DT_N_S_vbat_FULL_NAME_UNQUOTED vbat
#define DT_N_S_vbat_FULL_NAME_TOKEN vbat
#define DT_N_S_vbat_FULL_NAME_UPPER_TOKEN VBAT

/* Node parent (/) identifier: */
#define DT_N_S_vbat_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_vbat_NODELABEL_NUM 1
#define DT_N_S_vbat_FOREACH_NODELABEL(fn) fn(vbat)
#define DT_N_S_vbat_FOREACH_NODELABEL_VARGS(fn, ...) fn(vbat, __VA_ARGS__)
#define DT_N_S_vbat_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_CHILD_NUM 0
#define DT_N_S_vbat_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vbat_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_vbat_HASH 6jTjjWCiokAcWwHDg9DIiUBaK7_R_tkCJ6unpENFBIY

/* Node's dependency ordinal: */
#define DT_N_S_vbat_ORD 24
#define DT_N_S_vbat_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/adc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_EXISTS 1
#define DT_N_ALIAS_volt_sensor1   DT_N_S_vbat
#define DT_N_INST_0_st_stm32_vbat DT_N_S_vbat
#define DT_N_NODELABEL_vbat       DT_N_S_vbat

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_REG_NUM 0
#define DT_N_S_vbat_RANGES_NUM 0
#define DT_N_S_vbat_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_IRQ_NUM 0
#define DT_N_S_vbat_IRQ_LEVEL 0
#define DT_N_S_vbat_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_50000000
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input 17
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_LEN 1
#define DT_N_S_vbat_P_io_channels_EXISTS 1
#define DT_N_S_vbat_P_ratio 2
#define DT_N_S_vbat_P_ratio_EXISTS 1
#define DT_N_S_vbat_P_status "okay"
#define DT_N_S_vbat_P_status_STRING_UNQUOTED okay
#define DT_N_S_vbat_P_status_STRING_TOKEN okay
#define DT_N_S_vbat_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vbat_P_status_IDX_0 "okay"
#define DT_N_S_vbat_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_vbat_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_LEN 1
#define DT_N_S_vbat_P_status_EXISTS 1
#define DT_N_S_vbat_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_LEN 1
#define DT_N_S_vbat_P_compatible_EXISTS 1
#define DT_N_S_vbat_P_zephyr_deferred_init 0
#define DT_N_S_vbat_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vbat_P_wakeup_source 0
#define DT_N_S_vbat_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vref
 *
 * Node identifier: DT_N_S_vref
 *
 * Binding (compatible = st,stm32-vref):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_PATH "/vref"

/* Node's name with unit-address: */
#define DT_N_S_vref_FULL_NAME "vref"
#define DT_N_S_vref_FULL_NAME_UNQUOTED vref
#define DT_N_S_vref_FULL_NAME_TOKEN vref
#define DT_N_S_vref_FULL_NAME_UPPER_TOKEN VREF

/* Node parent (/) identifier: */
#define DT_N_S_vref_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_vref_NODELABEL_NUM 1
#define DT_N_S_vref_FOREACH_NODELABEL(fn) fn(vref)
#define DT_N_S_vref_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref, __VA_ARGS__)
#define DT_N_S_vref_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_CHILD_NUM 0
#define DT_N_S_vref_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vref_FOREACH_CHILD(fn) 
#define DT_N_S_vref_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_vref_HASH _KQ_hQT8vlL_HGgSo8B0PN_M_dmG5lMZ2C1aGmWYFog

/* Node's dependency ordinal: */
#define DT_N_S_vref_ORD 25
#define DT_N_S_vref_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/adc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_EXISTS 1
#define DT_N_ALIAS_volt_sensor0   DT_N_S_vref
#define DT_N_INST_0_st_stm32_vref DT_N_S_vref
#define DT_N_NODELABEL_vref       DT_N_S_vref

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_REG_NUM 0
#define DT_N_S_vref_RANGES_NUM 0
#define DT_N_S_vref_FOREACH_RANGE(fn) 
#define DT_N_S_vref_IRQ_NUM 0
#define DT_N_S_vref_IRQ_LEVEL 0
#define DT_N_S_vref_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_P_vrefint_cal_addr 536868794
#define DT_N_S_vref_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_mv 3300
#define DT_N_S_vref_P_vrefint_cal_mv_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_resolution 12
#define DT_N_S_vref_P_vrefint_cal_resolution_IDX_0_ENUM_IDX 0
#define DT_N_S_vref_P_vrefint_cal_resolution_IDX_0_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_resolution_IDX_0_ENUM_VAL_12_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_resolution_EXISTS 1
#define DT_N_S_vref_P_status "okay"
#define DT_N_S_vref_P_status_STRING_UNQUOTED okay
#define DT_N_S_vref_P_status_STRING_TOKEN okay
#define DT_N_S_vref_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vref_P_status_IDX_0 "okay"
#define DT_N_S_vref_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_vref_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_LEN 1
#define DT_N_S_vref_P_status_EXISTS 1
#define DT_N_S_vref_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_LEN 1
#define DT_N_S_vref_P_compatible_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_50000000
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input 18
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_LEN 1
#define DT_N_S_vref_P_io_channels_EXISTS 1
#define DT_N_S_vref_P_zephyr_deferred_init 0
#define DT_N_S_vref_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vref_P_wakeup_source 0
#define DT_N_S_vref_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_UNQUOTED clk-hsi
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_TOKEN clk_hsi
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_UPPER_TOKEN CLK_HSI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL(fn) fn(clk_hsi)
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hsi, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_hsi_HASH kE6dGnI__HuixEc_o2mPIojHDSoRqqYmExJJycW6WDM

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 26
#define DT_N_S_clocks_S_clk_hsi_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status "disabled"
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi, status, 0)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi, status, 0)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_status_LEN 1
#define DT_N_S_clocks_S_clk_hsi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hsi_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = st,stm32-lse-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-lse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_UNQUOTED clk-lse
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_TOKEN clk_lse
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_UPPER_TOKEN CLK_LSE

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL(fn) fn(clk_lse)
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lse, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_lse_HASH RRqOX2XdydrKvwOwHO0Kh3mPfPtUsDJrDySCwF316Ek

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 27
#define DT_N_S_clocks_S_clk_lse_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_0_st_stm32_lse_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse         DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_st_stm32_lse_clock 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0 "stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_driving_capability 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_ENUM_IDX 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass 0
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status "disabled"
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lse, status, 0)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lse, status, 0)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_status_LEN 1
#define DT_N_S_clocks_S_clk_lse_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_compatible {"st,stm32-lse-clock"}
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0 "st,stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lse-clock
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_TOKEN st_stm32_lse_clock
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LSE_CLOCK
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lse, compatible, 0)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lse, compatible, 0)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_lse_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_lse_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_lse_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_lse_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_UNQUOTED clk-lsi
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_TOKEN clk_lsi
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_UPPER_TOKEN CLK_LSI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL(fn) fn(clk_lsi)
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lsi, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_lsi_HASH y39tlAqwOoFHfznEDn2ZnvWSfYGNtJJvOJBnTUmFguY

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 28
#define DT_N_S_clocks_S_clk_lsi_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 40000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status "okay"
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lsi, status, 0)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lsi, status, 0)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_status_LEN 1
#define DT_N_S_clocks_S_clk_lsi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_lsi_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 29
#define DT_N_S_cpus_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	30, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 30
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	29, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PATH "/soc/pin-controller@48000000/gpio@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME "gpio@48000000"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME_UNQUOTED gpio@48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME_TOKEN gpio_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME_UPPER_TOKEN GPIO_48000000

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_HASH ktVyE2z0pcWLY1c5JP3x222NkMrJWrY5pPGg8ffd9nE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_ORD 31
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_SUPPORTS_ORDS \
	34, /* /gpio_keys */ \
	35, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PATH "/soc/pin-controller@48000000/gpio@48000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME "gpio@48000800"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME_UNQUOTED gpio@48000800
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME_TOKEN gpio_48000800
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME_UPPER_TOKEN GPIO_48000800

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_HASH n93nuZdYqflv0mYVUTrRbgKodqnVfp68rXG3AhQJioc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_ORD 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_SUPPORTS_ORDS \
	34, /* /gpio_keys */ \
	36, /* /gpio_keys/button_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_ADDRESS 1207961600 /* 0x48000800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg {1207961600 /* 0x48000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0 1207961600
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PATH "/soc/pin-controller@48000000/gpio@48000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME "gpio@48000c00"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME_UNQUOTED gpio@48000c00
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME_TOKEN gpio_48000c00
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME_UPPER_TOKEN GPIO_48000C00

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_HASH u2DqKzVc8Kgi9iMl9smjExSHInTly4SN9RvuvIXZQe8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_ORD 33
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_SUPPORTS_ORDS \
	34, /* /gpio_keys */ \
	37, /* /gpio_keys/button_2 */ \
	38, /* /gpio_keys/button_3 */ \
	39, /* /gpio_keys/button_4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_ADDRESS 1207962624 /* 0x48000c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg {1207962624 /* 0x48000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0 1207962624
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\input\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"
#define DT_N_S_gpio_keys_FULL_NAME_UNQUOTED gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_TOKEN gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_UPPER_TOKEN GPIO_KEYS

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_NODELABEL_NUM 0
#define DT_N_S_gpio_keys_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio_keys_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 5
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 5
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3) fn(DT_N_S_gpio_keys_S_button_4)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_4)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3) fn(DT_N_S_gpio_keys_S_button_4)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_4)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_gpio_keys_HASH o_cyM_1oGxkDdZvjWwmF_qWSV_TFQR0RmVqGE69cQ78

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 34
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	31, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	32, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	35, /* /gpio_keys/button */ \
	36, /* /gpio_keys/button_1 */ \
	37, /* /gpio_keys/button_2 */ \
	38, /* /gpio_keys/button_3 */ \
	39, /* /gpio_keys/button_4 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1
#define DT_N_S_gpio_keys_P_no_disconnect 0
#define DT_N_S_gpio_keys_P_no_disconnect_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UNQUOTED button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_TOKEN button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UPPER_TOKEN BUTTON

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL(fn) fn(user_button)
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL_VARGS(fn, ...) fn(user_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_HASH xGyp172f7ymL2kzXZ3NEGIppYDK1YGb1Ay3RG1U6EkA

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 35
#define DT_N_S_gpio_keys_S_button_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	31, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UNQUOTED User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0 "User"
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_1_PATH "/gpio_keys/button_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME "button_1"
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME_UNQUOTED button_1
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME_TOKEN button_1
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME_UPPER_TOKEN BUTTON_1

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_1_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_1_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_1_FOREACH_NODELABEL(fn) fn(key_1)
#define DT_N_S_gpio_keys_S_button_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(key_1, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_1_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_1_HASH 8pWXabJkvTWS5VHRxXWB_jLxu8ox5vV4NRKvg0jrLDc

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_1_ORD 36
#define DT_N_S_gpio_keys_S_button_1_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_1_REQUIRES_ORDS \
	32, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_1_EXISTS 1
#define DT_N_NODELABEL_key_1 DT_N_S_gpio_keys_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_1_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_label "Button 1"
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UNQUOTED Button 1
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_TOKEN Button_1
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UPPER_TOKEN BUTTON_1
#define DT_N_S_gpio_keys_S_button_1_P_label_IDX_0 "Button 1"
#define DT_N_S_gpio_keys_S_button_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, label, 0)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1, label, 0)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_zephyr_code 2
#define DT_N_S_gpio_keys_S_button_1_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_2_PATH "/gpio_keys/button_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME "button_2"
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_UNQUOTED button_2
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_TOKEN button_2
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME_UPPER_TOKEN BUTTON_2

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_2_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_2_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_2_FOREACH_NODELABEL(fn) fn(key_2)
#define DT_N_S_gpio_keys_S_button_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(key_2, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_2_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_2_HASH ZrOJnupqYKwaKvxYYqd18TwRo0rN6ZGAzKI7J_b18kA

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_2_ORD 37
#define DT_N_S_gpio_keys_S_button_2_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_2_REQUIRES_ORDS \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_2_EXISTS 1
#define DT_N_NODELABEL_key_2 DT_N_S_gpio_keys_S_button_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_2_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_2_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_2_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_label "Button 2"
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_UNQUOTED Button 2
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_TOKEN Button_2
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_UPPER_TOKEN BUTTON_2
#define DT_N_S_gpio_keys_S_button_2_P_label_IDX_0 "Button 2"
#define DT_N_S_gpio_keys_S_button_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, label, 0)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_2, label, 0)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_2, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_zephyr_code 3
#define DT_N_S_gpio_keys_S_button_2_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_3
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_3_PATH "/gpio_keys/button_3"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME "button_3"
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_UNQUOTED button_3
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_TOKEN button_3
#define DT_N_S_gpio_keys_S_button_3_FULL_NAME_UPPER_TOKEN BUTTON_3

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_3_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_3_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_3_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_3_FOREACH_NODELABEL(fn) fn(key_3)
#define DT_N_S_gpio_keys_S_button_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(key_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_3_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_3_HASH Kv6QQmLqNfb2jRJeZ6skgMzgw_P2TzoriqnpYzI8foY

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_3_ORD 38
#define DT_N_S_gpio_keys_S_button_3_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_3_REQUIRES_ORDS \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_3_EXISTS 1
#define DT_N_NODELABEL_key_3 DT_N_S_gpio_keys_S_button_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_3_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_3_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_3_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_3_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_3_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_3_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_label "Button 3"
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_UNQUOTED Button 3
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_TOKEN Button_3
#define DT_N_S_gpio_keys_S_button_3_P_label_STRING_UPPER_TOKEN BUTTON_3
#define DT_N_S_gpio_keys_S_button_3_P_label_IDX_0 "Button 3"
#define DT_N_S_gpio_keys_S_button_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_3, label, 0)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_3, label, 0)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_3, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_3, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_3_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_3_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_3_P_zephyr_code 4
#define DT_N_S_gpio_keys_S_button_3_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_4
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_4_PATH "/gpio_keys/button_4"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_4_FULL_NAME "button_4"
#define DT_N_S_gpio_keys_S_button_4_FULL_NAME_UNQUOTED button_4
#define DT_N_S_gpio_keys_S_button_4_FULL_NAME_TOKEN button_4
#define DT_N_S_gpio_keys_S_button_4_FULL_NAME_UPPER_TOKEN BUTTON_4

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_4_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_4_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_4_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_4_FOREACH_NODELABEL(fn) fn(key_4)
#define DT_N_S_gpio_keys_S_button_4_FOREACH_NODELABEL_VARGS(fn, ...) fn(key_4, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_4_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_4_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_4_HASH hqNA3VE4rb8uvJL13wyWY975N9wk_yrXbTcdvwVPWUM

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_4_ORD 39
#define DT_N_S_gpio_keys_S_button_4_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_4_REQUIRES_ORDS \
	33, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_4_EXISTS 1
#define DT_N_NODELABEL_key_4 DT_N_S_gpio_keys_S_button_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_4_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_4_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_4_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_4_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_4_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_VAL_pin 11
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_4, gpios, 0)
#define DT_N_S_gpio_keys_S_button_4_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_4, gpios, 0)
#define DT_N_S_gpio_keys_S_button_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_4_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_4_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_4_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_label "Button 4"
#define DT_N_S_gpio_keys_S_button_4_P_label_STRING_UNQUOTED Button 4
#define DT_N_S_gpio_keys_S_button_4_P_label_STRING_TOKEN Button_4
#define DT_N_S_gpio_keys_S_button_4_P_label_STRING_UPPER_TOKEN BUTTON_4
#define DT_N_S_gpio_keys_S_button_4_P_label_IDX_0 "Button 4"
#define DT_N_S_gpio_keys_S_button_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_4, label, 0)
#define DT_N_S_gpio_keys_S_button_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_4, label, 0)
#define DT_N_S_gpio_keys_S_button_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_4, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_4, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_4_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_4_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_4_P_zephyr_code 5
#define DT_N_S_gpio_keys_S_button_4_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PATH "/soc/pin-controller@48000000/gpio@48001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME "gpio@48001000"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME_UNQUOTED gpio@48001000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME_TOKEN gpio_48001000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME_UPPER_TOKEN GPIO_48001000

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_NODELABEL(fn) fn(gpioe)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioe, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_HASH f_fCfYEtBkeaIc2VCMEHUuaNoFMeL3PBB4lEAkfQY50

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_ORD 40
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_SUPPORTS_ORDS \
	41, /* /leds */ \
	42, /* /leds/led_10 */ \
	43, /* /leds/led_3 */ \
	44, /* /leds/led_4 */ \
	45, /* /leds/led_5 */ \
	46, /* /leds/led_6 */ \
	47, /* /leds/led_7 */ \
	48, /* /leds/led_8 */ \
	49, /* /leds/led_9 */ \
	93, /* /soc/i2c@40005400/lsm303dlhc-accel@19 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_ADDRESS 1207963648 /* 0x48001000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg {1207963648 /* 0x48001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0 1207963648
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 8
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 8
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_leds_S_led_7) fn(DT_N_S_leds_S_led_8) fn(DT_N_S_leds_S_led_9) fn(DT_N_S_leds_S_led_10)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_10)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_leds_S_led_7, __VA_ARGS__) fn(DT_N_S_leds_S_led_8, __VA_ARGS__) fn(DT_N_S_leds_S_led_9, __VA_ARGS__) fn(DT_N_S_leds_S_led_10, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_10, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_leds_S_led_7) fn(DT_N_S_leds_S_led_8) fn(DT_N_S_leds_S_led_9) fn(DT_N_S_leds_S_led_10)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_10)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_leds_S_led_7, __VA_ARGS__) fn(DT_N_S_leds_S_led_8, __VA_ARGS__) fn(DT_N_S_leds_S_led_9, __VA_ARGS__) fn(DT_N_S_leds_S_led_10, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_10, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 41
#define DT_N_S_leds_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	42, /* /leds/led_10 */ \
	43, /* /leds/led_3 */ \
	44, /* /leds/led_4 */ \
	45, /* /leds/led_5 */ \
	46, /* /leds/led_6 */ \
	47, /* /leds/led_7 */ \
	48, /* /leds/led_8 */ \
	49, /* /leds/led_9 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_10
 *
 * Node identifier: DT_N_S_leds_S_led_10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_10_PATH "/leds/led_10"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_10_FULL_NAME "led_10"
#define DT_N_S_leds_S_led_10_FULL_NAME_UNQUOTED led_10
#define DT_N_S_leds_S_led_10_FULL_NAME_TOKEN led_10
#define DT_N_S_leds_S_led_10_FULL_NAME_UPPER_TOKEN LED_10

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_10_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_10_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_10_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_10_FOREACH_NODELABEL(fn) fn(red_led_10)
#define DT_N_S_leds_S_led_10_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led_10, __VA_ARGS__)
#define DT_N_S_leds_S_led_10_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_10_CHILD_NUM 0
#define DT_N_S_leds_S_led_10_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_10_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_10_HASH 4w7hk2aU6C4_FGBLss6DpT3JaWGdzU3_hAC_7_gm18g

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_10_ORD 42
#define DT_N_S_leds_S_led_10_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_10_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_10_EXISTS 1
#define DT_N_NODELABEL_red_led_10 DT_N_S_leds_S_led_10

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_10_REG_NUM 0
#define DT_N_S_leds_S_led_10_RANGES_NUM 0
#define DT_N_S_leds_S_led_10_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_10_IRQ_NUM 0
#define DT_N_S_leds_S_led_10_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_10_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_10_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_10, gpios, 0)
#define DT_N_S_leds_S_led_10_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_10, gpios, 0)
#define DT_N_S_leds_S_led_10_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_10, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_10_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_10, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_10_P_gpios_LEN 1
#define DT_N_S_leds_S_led_10_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_10_P_label "User LD10"
#define DT_N_S_leds_S_led_10_P_label_STRING_UNQUOTED User LD10
#define DT_N_S_leds_S_led_10_P_label_STRING_TOKEN User_LD10
#define DT_N_S_leds_S_led_10_P_label_STRING_UPPER_TOKEN USER_LD10
#define DT_N_S_leds_S_led_10_P_label_IDX_0 "User LD10"
#define DT_N_S_leds_S_led_10_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_10_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_10, label, 0)
#define DT_N_S_leds_S_led_10_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_10, label, 0)
#define DT_N_S_leds_S_led_10_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_10, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_10_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_10, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_10_P_label_LEN 1
#define DT_N_S_leds_S_led_10_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"
#define DT_N_S_leds_S_led_3_FULL_NAME_UNQUOTED led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_TOKEN led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_UPPER_TOKEN LED_3

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_3_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL(fn) fn(red_led_3)
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led_3, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_CHILD_NUM 0
#define DT_N_S_leds_S_led_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_3_HASH pLTfITNsOL3nhJnRmoaWMqapL5v7uTq7eUydfMIb7KA

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 43
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_NODELABEL_red_led_3 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 9
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED User LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "User LD3"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_4
 *
 * Node identifier: DT_N_S_leds_S_led_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_4_PATH "/leds/led_4"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_4_FULL_NAME "led_4"
#define DT_N_S_leds_S_led_4_FULL_NAME_UNQUOTED led_4
#define DT_N_S_leds_S_led_4_FULL_NAME_TOKEN led_4
#define DT_N_S_leds_S_led_4_FULL_NAME_UPPER_TOKEN LED_4

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_4_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_4_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_4_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_4_FOREACH_NODELABEL(fn) fn(blue_led_4)
#define DT_N_S_leds_S_led_4_FOREACH_NODELABEL_VARGS(fn, ...) fn(blue_led_4, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_4_CHILD_NUM 0
#define DT_N_S_leds_S_led_4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_4_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_4_HASH TOpAQRMk024Us3eNONrABtrN_VDEw_x66xTQeuXq9do

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_4_ORD 44
#define DT_N_S_leds_S_led_4_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_4_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_4_EXISTS 1
#define DT_N_NODELABEL_blue_led_4 DT_N_S_leds_S_led_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_4_REG_NUM 0
#define DT_N_S_leds_S_led_4_RANGES_NUM 0
#define DT_N_S_leds_S_led_4_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_4_IRQ_NUM 0
#define DT_N_S_leds_S_led_4_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin 8
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_LEN 1
#define DT_N_S_leds_S_led_4_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label "User LD4"
#define DT_N_S_leds_S_led_4_P_label_STRING_UNQUOTED User LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_TOKEN User_LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_UPPER_TOKEN USER_LD4
#define DT_N_S_leds_S_led_4_P_label_IDX_0 "User LD4"
#define DT_N_S_leds_S_led_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, label, 0)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_4, label, 0)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_LEN 1
#define DT_N_S_leds_S_led_4_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_5
 *
 * Node identifier: DT_N_S_leds_S_led_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_5_PATH "/leds/led_5"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_5_FULL_NAME "led_5"
#define DT_N_S_leds_S_led_5_FULL_NAME_UNQUOTED led_5
#define DT_N_S_leds_S_led_5_FULL_NAME_TOKEN led_5
#define DT_N_S_leds_S_led_5_FULL_NAME_UPPER_TOKEN LED_5

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_5_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_5_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_5_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_5_FOREACH_NODELABEL(fn) fn(orange_led_5)
#define DT_N_S_leds_S_led_5_FOREACH_NODELABEL_VARGS(fn, ...) fn(orange_led_5, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_5_CHILD_NUM 0
#define DT_N_S_leds_S_led_5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_5_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_5_HASH nyAb_sWnzhLeljSkkVS7k6Vn_Y_tM2dn0MLcsDzo5Ek

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_5_ORD 45
#define DT_N_S_leds_S_led_5_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_5_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_5_EXISTS 1
#define DT_N_NODELABEL_orange_led_5 DT_N_S_leds_S_led_5

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_5_REG_NUM 0
#define DT_N_S_leds_S_led_5_RANGES_NUM 0
#define DT_N_S_leds_S_led_5_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_5_IRQ_NUM 0
#define DT_N_S_leds_S_led_5_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin 10
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_LEN 1
#define DT_N_S_leds_S_led_5_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label "User LD5"
#define DT_N_S_leds_S_led_5_P_label_STRING_UNQUOTED User LD5
#define DT_N_S_leds_S_led_5_P_label_STRING_TOKEN User_LD5
#define DT_N_S_leds_S_led_5_P_label_STRING_UPPER_TOKEN USER_LD5
#define DT_N_S_leds_S_led_5_P_label_IDX_0 "User LD5"
#define DT_N_S_leds_S_led_5_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, label, 0)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_5, label, 0)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_LEN 1
#define DT_N_S_leds_S_led_5_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_6
 *
 * Node identifier: DT_N_S_leds_S_led_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_6_PATH "/leds/led_6"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_6_FULL_NAME "led_6"
#define DT_N_S_leds_S_led_6_FULL_NAME_UNQUOTED led_6
#define DT_N_S_leds_S_led_6_FULL_NAME_TOKEN led_6
#define DT_N_S_leds_S_led_6_FULL_NAME_UPPER_TOKEN LED_6

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_6_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_6_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_6_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_6_FOREACH_NODELABEL(fn) fn(green_led_6)
#define DT_N_S_leds_S_led_6_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led_6, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_6_CHILD_NUM 0
#define DT_N_S_leds_S_led_6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_6_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_6_HASH jK4hRDQZe547I2l_dfNC_MWDzE_OUsDYxdNmGzfSnBc

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_6_ORD 46
#define DT_N_S_leds_S_led_6_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_6_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_6_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_6
#define DT_N_NODELABEL_green_led_6 DT_N_S_leds_S_led_6

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_6_REG_NUM 0
#define DT_N_S_leds_S_led_6_RANGES_NUM 0
#define DT_N_S_leds_S_led_6_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_6_IRQ_NUM 0
#define DT_N_S_leds_S_led_6_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_LEN 1
#define DT_N_S_leds_S_led_6_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label "User LD6"
#define DT_N_S_leds_S_led_6_P_label_STRING_UNQUOTED User LD6
#define DT_N_S_leds_S_led_6_P_label_STRING_TOKEN User_LD6
#define DT_N_S_leds_S_led_6_P_label_STRING_UPPER_TOKEN USER_LD6
#define DT_N_S_leds_S_led_6_P_label_IDX_0 "User LD6"
#define DT_N_S_leds_S_led_6_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, label, 0)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_6, label, 0)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_LEN 1
#define DT_N_S_leds_S_led_6_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_7
 *
 * Node identifier: DT_N_S_leds_S_led_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_7_PATH "/leds/led_7"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_7_FULL_NAME "led_7"
#define DT_N_S_leds_S_led_7_FULL_NAME_UNQUOTED led_7
#define DT_N_S_leds_S_led_7_FULL_NAME_TOKEN led_7
#define DT_N_S_leds_S_led_7_FULL_NAME_UPPER_TOKEN LED_7

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_7_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_7_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_7_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_7_FOREACH_NODELABEL(fn) fn(green_led_7)
#define DT_N_S_leds_S_led_7_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led_7, __VA_ARGS__)
#define DT_N_S_leds_S_led_7_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_7_CHILD_NUM 0
#define DT_N_S_leds_S_led_7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_7_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_7_HASH QVe3dDENUspTMrb9kdm2xb8P7rVRvKmkSLHnrT5IKks

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_7_ORD 47
#define DT_N_S_leds_S_led_7_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_7_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_7_EXISTS 1
#define DT_N_ALIAS_led1            DT_N_S_leds_S_led_7
#define DT_N_NODELABEL_green_led_7 DT_N_S_leds_S_led_7

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_7_REG_NUM 0
#define DT_N_S_leds_S_led_7_RANGES_NUM 0
#define DT_N_S_leds_S_led_7_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_7_IRQ_NUM 0
#define DT_N_S_leds_S_led_7_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_VAL_pin 11
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_7_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_7_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_7, gpios, 0)
#define DT_N_S_leds_S_led_7_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_7, gpios, 0)
#define DT_N_S_leds_S_led_7_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_7, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_7_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_7, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_7_P_gpios_LEN 1
#define DT_N_S_leds_S_led_7_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_7_P_label "User LD7"
#define DT_N_S_leds_S_led_7_P_label_STRING_UNQUOTED User LD7
#define DT_N_S_leds_S_led_7_P_label_STRING_TOKEN User_LD7
#define DT_N_S_leds_S_led_7_P_label_STRING_UPPER_TOKEN USER_LD7
#define DT_N_S_leds_S_led_7_P_label_IDX_0 "User LD7"
#define DT_N_S_leds_S_led_7_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_7_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_7, label, 0)
#define DT_N_S_leds_S_led_7_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_7, label, 0)
#define DT_N_S_leds_S_led_7_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_7, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_7_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_7, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_7_P_label_LEN 1
#define DT_N_S_leds_S_led_7_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_8
 *
 * Node identifier: DT_N_S_leds_S_led_8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_8_PATH "/leds/led_8"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_8_FULL_NAME "led_8"
#define DT_N_S_leds_S_led_8_FULL_NAME_UNQUOTED led_8
#define DT_N_S_leds_S_led_8_FULL_NAME_TOKEN led_8
#define DT_N_S_leds_S_led_8_FULL_NAME_UPPER_TOKEN LED_8

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_8_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_8_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_8_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_8_FOREACH_NODELABEL(fn) fn(orange_led_8)
#define DT_N_S_leds_S_led_8_FOREACH_NODELABEL_VARGS(fn, ...) fn(orange_led_8, __VA_ARGS__)
#define DT_N_S_leds_S_led_8_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_8_CHILD_NUM 0
#define DT_N_S_leds_S_led_8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_8_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_8_HASH bbRsXUvq57etzYvzNNsiEVeNX9BhPJAaXlg1iVCZEdE

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_8_ORD 48
#define DT_N_S_leds_S_led_8_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_8_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_8_EXISTS 1
#define DT_N_NODELABEL_orange_led_8 DT_N_S_leds_S_led_8

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_8_REG_NUM 0
#define DT_N_S_leds_S_led_8_RANGES_NUM 0
#define DT_N_S_leds_S_led_8_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_8_IRQ_NUM 0
#define DT_N_S_leds_S_led_8_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_8_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_8_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_8, gpios, 0)
#define DT_N_S_leds_S_led_8_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_8, gpios, 0)
#define DT_N_S_leds_S_led_8_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_8, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_8_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_8, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_8_P_gpios_LEN 1
#define DT_N_S_leds_S_led_8_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_8_P_label "User LD8"
#define DT_N_S_leds_S_led_8_P_label_STRING_UNQUOTED User LD8
#define DT_N_S_leds_S_led_8_P_label_STRING_TOKEN User_LD8
#define DT_N_S_leds_S_led_8_P_label_STRING_UPPER_TOKEN USER_LD8
#define DT_N_S_leds_S_led_8_P_label_IDX_0 "User LD8"
#define DT_N_S_leds_S_led_8_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_8_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_8, label, 0)
#define DT_N_S_leds_S_led_8_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_8, label, 0)
#define DT_N_S_leds_S_led_8_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_8, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_8_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_8, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_8_P_label_LEN 1
#define DT_N_S_leds_S_led_8_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_9
 *
 * Node identifier: DT_N_S_leds_S_led_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_9_PATH "/leds/led_9"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_9_FULL_NAME "led_9"
#define DT_N_S_leds_S_led_9_FULL_NAME_UNQUOTED led_9
#define DT_N_S_leds_S_led_9_FULL_NAME_TOKEN led_9
#define DT_N_S_leds_S_led_9_FULL_NAME_UPPER_TOKEN LED_9

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_9_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_9_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_9_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_9_FOREACH_NODELABEL(fn) fn(blue_led_9)
#define DT_N_S_leds_S_led_9_FOREACH_NODELABEL_VARGS(fn, ...) fn(blue_led_9, __VA_ARGS__)
#define DT_N_S_leds_S_led_9_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_9_CHILD_NUM 0
#define DT_N_S_leds_S_led_9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_9_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_9_HASH 9_9a3PkirD1Q8OhmbOxJi0Q2fN5dY9VmkThn0SIiH9g

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_9_ORD 49
#define DT_N_S_leds_S_led_9_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_9_REQUIRES_ORDS \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	41, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_9_EXISTS 1
#define DT_N_NODELABEL_blue_led_9 DT_N_S_leds_S_led_9

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_9_REG_NUM 0
#define DT_N_S_leds_S_led_9_RANGES_NUM 0
#define DT_N_S_leds_S_led_9_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_9_IRQ_NUM 0
#define DT_N_S_leds_S_led_9_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_9_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_9_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_9, gpios, 0)
#define DT_N_S_leds_S_led_9_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_9, gpios, 0)
#define DT_N_S_leds_S_led_9_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_9, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_9_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_9, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_9_P_gpios_LEN 1
#define DT_N_S_leds_S_led_9_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_9_P_label "User LD9"
#define DT_N_S_leds_S_led_9_P_label_STRING_UNQUOTED User LD9
#define DT_N_S_leds_S_led_9_P_label_STRING_TOKEN User_LD9
#define DT_N_S_leds_S_led_9_P_label_STRING_UPPER_TOKEN USER_LD9
#define DT_N_S_leds_S_led_9_P_label_IDX_0 "User LD9"
#define DT_N_S_leds_S_led_9_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_9_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_9, label, 0)
#define DT_N_S_leds_S_led_9_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_9, label, 0)
#define DT_N_S_leds_S_led_9_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_9, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_9_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_9, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_9_P_label_LEN 1
#define DT_N_S_leds_S_led_9_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@50000100
 *
 * Node identifier: DT_N_S_soc_S_adc_50000100
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50000100_PATH "/soc/adc@50000100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50000100_FULL_NAME "adc@50000100"
#define DT_N_S_soc_S_adc_50000100_FULL_NAME_UNQUOTED adc@50000100
#define DT_N_S_soc_S_adc_50000100_FULL_NAME_TOKEN adc_50000100
#define DT_N_S_soc_S_adc_50000100_FULL_NAME_UPPER_TOKEN ADC_50000100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50000100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50000100_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_50000100_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_50000100_FOREACH_NODELABEL(fn) fn(adc2)
#define DT_N_S_soc_S_adc_50000100_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc2, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_50000100_CHILD_NUM 0
#define DT_N_S_soc_S_adc_50000100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50000100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_50000100_HASH LxdlXLvfJsb4AiPhCfDuYI0eWnvRy_vK_dwAyrNtWKo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50000100_ORD 50
#define DT_N_S_soc_S_adc_50000100_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50000100_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50000100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50000100_EXISTS 1
#define DT_N_INST_1_st_stm32_adc DT_N_S_soc_S_adc_50000100
#define DT_N_NODELABEL_adc2      DT_N_S_soc_S_adc_50000100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50000100_REG_NUM 1
#define DT_N_S_soc_S_adc_50000100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_REG_IDX_0_VAL_ADDRESS 1342177536 /* 0x50000100 */
#define DT_N_S_soc_S_adc_50000100_REG_IDX_0_VAL_SIZE 76 /* 0x4c */
#define DT_N_S_soc_S_adc_50000100_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50000100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50000100_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_50000100_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_50000100_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50000100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_50000100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_50000100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50000100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50000100_P_reg {1342177536 /* 0x50000100 */, 76 /* 0x4c */}
#define DT_N_S_soc_S_adc_50000100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_reg_IDX_0 1342177536
#define DT_N_S_soc_S_adc_50000100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_reg_IDX_1 76
#define DT_N_S_soc_S_adc_50000100_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_adc_50000100_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, clocks, 0)
#define DT_N_S_soc_S_adc_50000100_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, clocks, 0)
#define DT_N_S_soc_S_adc_50000100_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50000100_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50000100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50000100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50000100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_vref_mv 3000
#define DT_N_S_soc_S_adc_50000100_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_resolutions {6316812 /* 0x60630c */, 5333772 /* 0x51630c */, 4350732 /* 0x42630c */, 3367692 /* 0x33630c */}
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_0 6316812
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_1 5333772
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_2 4350732
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_resolutions_IDX_3 3367692
#define DT_N_S_soc_S_adc_50000100_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 3)
#define DT_N_S_soc_S_adc_50000100_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 3)
#define DT_N_S_soc_S_adc_50000100_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_50000100_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times {2 /* 0x2 */, 3 /* 0x3 */, 5 /* 0x5 */, 8 /* 0x8 */, 20 /* 0x14 */, 62 /* 0x3e */, 182 /* 0xb6 */, 602 /* 0x25a */}
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_0 2
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_1 3
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_2 5
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_3 8
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_4 20
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_5 62
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_6 182
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_IDX_7 602
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 7)
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 7)
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50000100, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_50000100_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer "FULLY_CONFIGURABLE"
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_STRING_UNQUOTED FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_STRING_TOKEN FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_STRING_UPPER_TOKEN FULLY_CONFIGURABLE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_IDX_0 "FULLY_CONFIGURABLE"
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_IDX_0_ENUM_VAL_FULLY_CONFIGURABLE_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, st_adc_sequencer, 0)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, st_adc_sequencer, 0)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, st_adc_sequencer, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, st_adc_sequencer, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_LEN 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler "OVERSAMPLER_NONE"
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_STRING_UNQUOTED OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_STRING_TOKEN OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_STRING_UPPER_TOKEN OVERSAMPLER_NONE
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_IDX_0 "OVERSAMPLER_NONE"
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_IDX_0_ENUM_VAL_OVERSAMPLER_NONE_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, st_adc_oversampler, 0)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, st_adc_oversampler, 0)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, st_adc_oversampler, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, st_adc_oversampler, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_LEN 1
#define DT_N_S_soc_S_adc_50000100_P_st_adc_oversampler_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_status "disabled"
#define DT_N_S_soc_S_adc_50000100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_50000100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_50000100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_50000100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_50000100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_50000100_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, status, 0)
#define DT_N_S_soc_S_adc_50000100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, status, 0)
#define DT_N_S_soc_S_adc_50000100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_status_LEN 1
#define DT_N_S_soc_S_adc_50000100_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50000100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50000100_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_50000100_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_50000100_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_50000100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50000100, compatible, 0)
#define DT_N_S_soc_S_adc_50000100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50000100, compatible, 0)
#define DT_N_S_soc_S_adc_50000100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50000100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50000100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50000100_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50000100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_50000100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50000100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_50000100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_50000100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/can_rx_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_PATH "/soc/pin-controller@48000000/can_rx_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FULL_NAME "can_rx_pd0"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FULL_NAME_UNQUOTED can_rx_pd0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FULL_NAME_TOKEN can_rx_pd0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FULL_NAME_UPPER_TOKEN CAN_RX_PD0

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_NODELABEL(fn) fn(can_rx_pd0)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_NODELABEL_VARGS(fn, ...) fn(can_rx_pd0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_HASH JJ3sY5wfmln7d8888r3EHLho4vddAB4j4SH4IPUMktY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_ORD 51
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_SUPPORTS_ORDS \
	53, /* /soc/can@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_EXISTS 1
#define DT_N_NODELABEL_can_rx_pd0 DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_pinmux 1543
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/can_tx_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_PATH "/soc/pin-controller@48000000/can_tx_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FULL_NAME "can_tx_pd1"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FULL_NAME_UNQUOTED can_tx_pd1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FULL_NAME_TOKEN can_tx_pd1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FULL_NAME_UPPER_TOKEN CAN_TX_PD1

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_NODELABEL(fn) fn(can_tx_pd1)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_NODELABEL_VARGS(fn, ...) fn(can_tx_pd1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_HASH 8_v12WB3KUOaX0OjNwFE113FkoaLijLcnVL8QCrACP8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_ORD 52
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_SUPPORTS_ORDS \
	53, /* /soc/can@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_EXISTS 1
#define DT_N_NODELABEL_can_tx_pd1 DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_pinmux 1575
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/can@40006400
 *
 * Node identifier: DT_N_S_soc_S_can_40006400
 *
 * Binding (compatible = st,stm32-bxcan):
 *   $ZEPHYR_BASE\dts\bindings\can\st,stm32-bxcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006400_PATH "/soc/can@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006400_FULL_NAME "can@40006400"
#define DT_N_S_soc_S_can_40006400_FULL_NAME_UNQUOTED can@40006400
#define DT_N_S_soc_S_can_40006400_FULL_NAME_TOKEN can_40006400
#define DT_N_S_soc_S_can_40006400_FULL_NAME_UPPER_TOKEN CAN_40006400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_40006400_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_40006400_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_40006400_FOREACH_NODELABEL(fn) fn(can1)
#define DT_N_S_soc_S_can_40006400_FOREACH_NODELABEL_VARGS(fn, ...) fn(can1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_40006400_CHILD_NUM 0
#define DT_N_S_soc_S_can_40006400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_can_40006400_HASH val_iOcNyNmh6jx1XoeAlpOC9DwQRToiiXS2PS43mJQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006400_ORD 53
#define DT_N_S_soc_S_can_40006400_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	51, /* /soc/pin-controller@48000000/can_rx_pd0 */ \
	52, /* /soc/pin-controller@48000000/can_tx_pd1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006400_EXISTS 1
#define DT_N_INST_0_st_stm32_bxcan DT_N_S_soc_S_can_40006400
#define DT_N_NODELABEL_can1        DT_N_S_soc_S_can_40006400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_40006400_REG_NUM 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006400_RANGES_NUM 0
#define DT_N_S_soc_S_can_40006400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_40006400_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq 21
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq 22
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_40006400_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_can_40006400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_CONTROLLER DT_N_S_soc_S_can_40006400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_CONTROLLER DT_N_S_soc_S_can_40006400_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_CONTROLLER DT_N_S_soc_S_can_40006400_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_can_40006400_COMPAT_MATCHES_st_stm32_bxcan 1
#define DT_N_S_soc_S_can_40006400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_can_40006400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MODEL_IDX_0 "stm32-bxcan"
#define DT_N_S_soc_S_can_40006400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_40006400_PINCTRL_NUM 1
#define DT_N_S_soc_S_can_40006400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_can_40006400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_40006400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_can_40006400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_can_40006400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0
#define DT_N_S_soc_S_can_40006400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4 21
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6 22
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 1)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 1)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_can_40006400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, pinctrl_names, 0)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, pinctrl_names, 0)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_can_40006400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status "okay"
#define DT_N_S_soc_S_can_40006400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_can_40006400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_can_40006400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_can_40006400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_can_40006400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_can_40006400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, status, 0)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, status, 0)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_status_LEN 1
#define DT_N_S_soc_S_can_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible {"st,stm32-bxcan"}
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0 "st,stm32-bxcan"
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-bxcan
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_STRING_TOKEN st_stm32_bxcan
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_BXCAN
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_STRING_UNQUOTED TX
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_STRING_TOKEN TX
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_STRING_UNQUOTED RX0
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_STRING_TOKEN RX0
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN RX0
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_STRING_UNQUOTED RX1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_STRING_TOKEN RX1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN RX1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_STRING_UNQUOTED SCE
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_STRING_TOKEN SCE
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN SCE
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_40006400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_wakeup_source 0
#define DT_N_S_soc_S_can_40006400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_40006400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/dac_out1_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_PATH "/soc/pin-controller@48000000/dac_out1_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FULL_NAME "dac_out1_pa4"
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FULL_NAME_UNQUOTED dac_out1_pa4
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FULL_NAME_TOKEN dac_out1_pa4
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FULL_NAME_UPPER_TOKEN DAC_OUT1_PA4

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_NODELABEL(fn) fn(dac_out1_pa4)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac_out1_pa4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_HASH XKdqMWj7JVtQLs5LjWKMcW57_fJ0oYSNcFMrTP7ThkI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_ORD 54
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_SUPPORTS_ORDS \
	55, /* /soc/dac@40007400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_EXISTS 1
#define DT_N_NODELABEL_dac_out1_pa4 DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_pinmux 144
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/dac@40007400
 *
 * Node identifier: DT_N_S_soc_S_dac_40007400
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE\dts\bindings\dac\st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_40007400_PATH "/soc/dac@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_40007400_FULL_NAME "dac@40007400"
#define DT_N_S_soc_S_dac_40007400_FULL_NAME_UNQUOTED dac@40007400
#define DT_N_S_soc_S_dac_40007400_FULL_NAME_TOKEN dac_40007400
#define DT_N_S_soc_S_dac_40007400_FULL_NAME_UPPER_TOKEN DAC_40007400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_40007400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_40007400_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dac_40007400_NODELABEL_NUM 1
#define DT_N_S_soc_S_dac_40007400_FOREACH_NODELABEL(fn) fn(dac1)
#define DT_N_S_soc_S_dac_40007400_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_40007400_CHILD_NUM 0
#define DT_N_S_soc_S_dac_40007400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dac_40007400_HASH AEmTXTZMLBfEYJhhkd3MmBxYI__rcYzmOjJiV2l9668

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_40007400_ORD 55
#define DT_N_S_soc_S_dac_40007400_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_40007400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40021000 */ \
	54, /* /soc/pin-controller@48000000/dac_out1_pa4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_40007400_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_40007400
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_40007400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_40007400_REG_NUM 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_40007400_RANGES_NUM 0
#define DT_N_S_soc_S_dac_40007400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_40007400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_40007400_IRQ_LEVEL 0
#define DT_N_S_soc_S_dac_40007400_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0 "stm32-dac"
#define DT_N_S_soc_S_dac_40007400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NUM 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4

/* Generic property macros: */
#define DT_N_S_soc_S_dac_40007400_P_reg {1073771520 /* 0x40007400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status "okay"
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, status, 0)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, status, 0)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dac
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dac
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DAC
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dac_40007400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source 0
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_40007400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32-dma-v2bis):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32-dma-v2bis.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_UNQUOTED dma@40020000
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_TOKEN dma_40020000
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_UPPER_TOKEN DMA_40020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL(fn) fn(dma1)
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dma_40020000_HASH wrD_czGB0R3hBC1Od9iGdfNbQ3BZqmarPsJAc4MBFAs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 56
#define DT_N_S_soc_S_dma_40020000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v2bis DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_dma1            DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32_dma_v2bis 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0 "stm32-dma-v2bis"
#define DT_N_S_soc_S_dma_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32-dma-v2bis"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32-dma-v2bis"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v2bis
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v2bis
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V2BIS
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020400
 *
 * Node identifier: DT_N_S_soc_S_dma_40020400
 *
 * Binding (compatible = st,stm32-dma-v2bis):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32-dma-v2bis.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020400_PATH "/soc/dma@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020400_FULL_NAME "dma@40020400"
#define DT_N_S_soc_S_dma_40020400_FULL_NAME_UNQUOTED dma@40020400
#define DT_N_S_soc_S_dma_40020400_FULL_NAME_TOKEN dma_40020400
#define DT_N_S_soc_S_dma_40020400_FULL_NAME_UPPER_TOKEN DMA_40020400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020400_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40020400_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40020400_FOREACH_NODELABEL(fn) fn(dma2)
#define DT_N_S_soc_S_dma_40020400_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma2, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020400_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40020400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dma_40020400_HASH 6M2mn87tCKiqdKtfbifYbjloijPkEmcQ0zczmKi97Y8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020400_ORD 57
#define DT_N_S_soc_S_dma_40020400_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v2bis DT_N_S_soc_S_dma_40020400
#define DT_N_NODELABEL_dma2            DT_N_S_soc_S_dma_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020400_REG_NUM 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020400_IRQ_NUM 5
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020400_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MATCHES_st_stm32_dma_v2bis 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MODEL_IDX_0 "stm32-dma-v2bis"
#define DT_N_S_soc_S_dma_40020400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status "disabled"
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40020400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, status, 0)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, status, 0)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_status_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible {"st,stm32-dma-v2bis"}
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0 "st,stm32-dma-v2bis"
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v2bis
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v2bis
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V2BIS
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, compatible, 0)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, compatible, 0)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, clocks, 0)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, clocks, 0)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40020400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40020400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40010400
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40010400
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PATH "/soc/interrupt-controller@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40010400_FULL_NAME "interrupt-controller@40010400"
#define DT_N_S_soc_S_interrupt_controller_40010400_FULL_NAME_UNQUOTED interrupt-controller@40010400
#define DT_N_S_soc_S_interrupt_controller_40010400_FULL_NAME_TOKEN interrupt_controller_40010400
#define DT_N_S_soc_S_interrupt_controller_40010400_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_40010400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40010400_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_40010400_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_NODELABEL(fn) fn(exti)
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_NODELABEL_VARGS(fn, ...) fn(exti, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40010400_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40010400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_40010400_HASH e_jpSkD_2HRRVwDpnnAQSjqS4ZdVHIcY8woRSWkf10Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40010400_ORD 58
#define DT_N_S_soc_S_interrupt_controller_40010400_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40010400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40010400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40010400_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40010400
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40010400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40010400_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NUM 7
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_irq 7
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_irq 8
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_irq 9
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_irq 10
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_irq 40
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_LEVEL 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line5_9_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line5_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line5_9_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line5_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line5_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line10_15_VAL_irq DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line10_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line10_15_VAL_priority DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line10_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NAME_line10_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_40010400_IRQ_IDX_6_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MODEL_IDX_0 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40010400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */, 8 /* 0x8 */, 0 /* 0x0 */, 9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_2 7
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_4 8
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_6 9
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_8 10
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_10 23
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_12 40
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5-9", "line10-15"}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_5 "line5-9"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_5_STRING_UNQUOTED line5-9
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_5_STRING_TOKEN line5_9
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5_9
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_6 "line10-15"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_6_STRING_UNQUOTED line10-15
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_6_STRING_TOKEN line10_15
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE10_15
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_LEN 7
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_num_lines 16
#define DT_N_S_soc_S_interrupt_controller_40010400_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges {0 /* 0x0 */, 1 /* 0x1 */, 1 /* 0x1 */, 1 /* 0x1 */, 2 /* 0x2 */, 1 /* 0x1 */, 3 /* 0x3 */, 1 /* 0x1 */, 4 /* 0x4 */, 1 /* 0x1 */, 5 /* 0x5 */, 5 /* 0x5 */, 10 /* 0xa */, 6 /* 0x6 */}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_1 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_2 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_3 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_4 2
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_5 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_6 3
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_7 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_8 4
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_9 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_10 5
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_11 5
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_12 10
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_IDX_13 6
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 13)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 13)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 13, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, line_ranges, 13, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_LEN 14
#define DT_N_S_soc_S_interrupt_controller_40010400_P_line_ranges_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_interrupt_controller_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_PATH "/soc/pin-controller@48000000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FULL_NAME_UNQUOTED usart2_rx_pa3
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FULL_NAME_TOKEN usart2_rx_pa3
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FULL_NAME_UPPER_TOKEN USART2_RX_PA3

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_NODELABEL(fn) fn(usart2_rx_pa3)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2_rx_pa3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_HASH L8YM_5Gds8rDpPNBkLMSwiIqMN5bN6n_c6RcRcmrVWE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_ORD 59
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_SUPPORTS_ORDS \
	62, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_pinmux 103
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_PATH "/soc/pin-controller@48000000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FULL_NAME_UNQUOTED usart2_tx_pa2
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FULL_NAME_TOKEN usart2_tx_pa2
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FULL_NAME_UPPER_TOKEN USART2_TX_PA2

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_NODELABEL(fn) fn(usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2_tx_pa2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_HASH nd7iSLk_FVnVLYG77HKm_yPt_qkS_Vtbwf86eK5Pak4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_ORD 60
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_SUPPORTS_ORDS \
	62, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_pinmux 71
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_40021000_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   $ZEPHYR_BASE\dts\bindings\reset\st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PATH "/soc/rcc@40021000/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FULL_NAME "reset-controller"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FULL_NAME_UNQUOTED reset-controller
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FULL_NAME_TOKEN reset_controller
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FULL_NAME_UPPER_TOKEN RESET_CONTROLLER

/* Node parent (/soc/rcc@40021000) identifier: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PARENT DT_N_S_soc_S_rcc_40021000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_NODELABEL(fn) fn(rctl)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(rctl, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_HASH IG1ObzgWVlEiYIYYv8tGMqRz03UFbMoci7_3L65c4dQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_ORD 61
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_SUPPORTS_ORDS \
	62, /* /soc/serial@40004400 */ \
	63, /* /soc/serial@40004800 */ \
	66, /* /soc/serial@40004c00 */ \
	67, /* /soc/serial@40005000 */ \
	70, /* /soc/serial@40013800 */ \
	99, /* /soc/timers@40000000 */ \
	102, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000800 */ \
	107, /* /soc/timers@40001000 */ \
	109, /* /soc/timers@40001400 */ \
	111, /* /soc/timers@40012c00 */ \
	114, /* /soc/timers@40013400 */ \
	116, /* /soc/timers@40014000 */ \
	119, /* /soc/timers@40014400 */ \
	122, /* /soc/timers@40014800 */ \
	125, /* /soc/timers@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_40021000_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_set_bit_to_deassert 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_set_bit_to_deassert_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_UNQUOTED serial@40004400
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_TOKEN serial_40004400
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_UPPER_TOKEN SERIAL_40004400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004400_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL(fn) fn(usart2)
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40004400_HASH w0whRjCvTBPyVty9dxjB3Bsl1nzzH1xRQTJifgUAAKQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 62
#define DT_N_S_soc_S_serial_40004400_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	59, /* /soc/pin-controller@48000000/usart2_rx_pa3 */ \
	60, /* /soc/pin-controller@48000000/usart2_tx_pa2 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id 529
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_data_bits 8
#define DT_N_S_soc_S_serial_40004400_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40004400_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_enable 0
#define DT_N_S_soc_S_serial_40004400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_invert 0
#define DT_N_S_soc_S_serial_40004400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_parity "none"
#define DT_N_S_soc_S_serial_40004400_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40004400_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40004400_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40004400_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40004400_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40004400_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, parity, 0)
#define DT_N_S_soc_S_serial_40004400_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, parity, 0)
#define DT_N_S_soc_S_serial_40004400_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_UNQUOTED serial@40004800
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_TOKEN serial_40004800
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_UPPER_TOKEN SERIAL_40004800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004800_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004800_FOREACH_NODELABEL(fn) fn(usart3)
#define DT_N_S_soc_S_serial_40004800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40004800_HASH zEiuovs75QHyumn1pL5rvTd5x6H1bdnak278L4bYuj0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 63
#define DT_N_S_soc_S_serial_40004800_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_3_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id 530
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_data_bits 8
#define DT_N_S_soc_S_serial_40004800_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40004800_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_single_wire 0
#define DT_N_S_soc_S_serial_40004800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_enable 0
#define DT_N_S_soc_S_serial_40004800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_invert 0
#define DT_N_S_soc_S_serial_40004800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_parity "none"
#define DT_N_S_soc_S_serial_40004800_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40004800_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40004800_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40004800_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40004800_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40004800_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, parity, 0)
#define DT_N_S_soc_S_serial_40004800_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, parity, 0)
#define DT_N_S_soc_S_serial_40004800_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "disabled"
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/uart4_rx_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_PATH "/soc/pin-controller@48000000/uart4_rx_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FULL_NAME "uart4_rx_pc11"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FULL_NAME_UNQUOTED uart4_rx_pc11
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FULL_NAME_TOKEN uart4_rx_pc11
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FULL_NAME_UPPER_TOKEN UART4_RX_PC11

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_NODELABEL(fn) fn(uart4_rx_pc11)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4_rx_pc11, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_HASH t2RItu_Cczq1VqTajCh_XtbMS_BamDbnoAFcXsQmh8A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_ORD 64
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_SUPPORTS_ORDS \
	66, /* /soc/serial@40004c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_EXISTS 1
#define DT_N_NODELABEL_uart4_rx_pc11 DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_pinmux 1381
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/uart4_tx_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_PATH "/soc/pin-controller@48000000/uart4_tx_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FULL_NAME "uart4_tx_pc10"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FULL_NAME_UNQUOTED uart4_tx_pc10
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FULL_NAME_TOKEN uart4_tx_pc10
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FULL_NAME_UPPER_TOKEN UART4_TX_PC10

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_NODELABEL(fn) fn(uart4_tx_pc10)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4_tx_pc10, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_HASH 2wfZYCCqJnTSqUyvF1tQOHtPWUETruiwZSL0sPfPJWE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_ORD 65
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_SUPPORTS_ORDS \
	66, /* /soc/serial@40004c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_EXISTS 1
#define DT_N_NODELABEL_uart4_tx_pc10 DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_pinmux 1349
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_UNQUOTED serial@40004c00
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_TOKEN serial_40004c00
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_UPPER_TOKEN SERIAL_40004C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004c00_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004c00_FOREACH_NODELABEL(fn) fn(uart4)
#define DT_N_S_soc_S_serial_40004c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004c00_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40004c00_HASH qw6sySCqGO4wCPwXm_EFlFNv1NqVYdGrZFXhKaRqK7U

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 66
#define DT_N_S_soc_S_serial_40004c00_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */ \
	64, /* /soc/pin-controller@48000000/uart4_rx_pc11 */ \
	65, /* /soc/pin-controller@48000000/uart4_tx_pc10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_2_st_stm32_uart DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id 531
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004c00_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, stop_bits, 0)
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_data_bits 8
#define DT_N_S_soc_S_serial_40004c00_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40004c00_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40004c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_enable 0
#define DT_N_S_soc_S_serial_40004c00_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_parity "none"
#define DT_N_S_soc_S_serial_40004c00_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40004c00_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40004c00_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40004c00_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40004c00_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40004c00_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, parity, 0)
#define DT_N_S_soc_S_serial_40004c00_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, parity, 0)
#define DT_N_S_soc_S_serial_40004c00_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "okay"
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_UNQUOTED serial@40005000
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_TOKEN serial_40005000
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_UPPER_TOKEN SERIAL_40005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40005000_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40005000_FOREACH_NODELABEL(fn) fn(uart5)
#define DT_N_S_soc_S_serial_40005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40005000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40005000_HASH zMMX5P6gmfqIczU7IzsjM4mPclQdCNjtpO0LqCzLhTI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 67
#define DT_N_S_soc_S_serial_40005000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id 532
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40005000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_data_bits 8
#define DT_N_S_soc_S_serial_40005000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40005000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_single_wire 0
#define DT_N_S_soc_S_serial_40005000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_enable 0
#define DT_N_S_soc_S_serial_40005000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_invert 0
#define DT_N_S_soc_S_serial_40005000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40005000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_parity "none"
#define DT_N_S_soc_S_serial_40005000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40005000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40005000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40005000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40005000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40005000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, parity, 0)
#define DT_N_S_soc_S_serial_40005000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, parity, 0)
#define DT_N_S_soc_S_serial_40005000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_PATH "/soc/pin-controller@48000000/usart1_rx_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FULL_NAME "usart1_rx_pc5"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FULL_NAME_UNQUOTED usart1_rx_pc5
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FULL_NAME_TOKEN usart1_rx_pc5
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FULL_NAME_UPPER_TOKEN USART1_RX_PC5

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_NODELABEL(fn) fn(usart1_rx_pc5)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1_rx_pc5, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_HASH 0dk2RVBCCQexD9H__QpjdsAYkDmF_7b5onxntaqN7pQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_ORD 68
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_SUPPORTS_ORDS \
	70, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pc5 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_pinmux 1191
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_PATH "/soc/pin-controller@48000000/usart1_tx_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FULL_NAME "usart1_tx_pc4"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FULL_NAME_UNQUOTED usart1_tx_pc4
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FULL_NAME_TOKEN usart1_tx_pc4
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FULL_NAME_UPPER_TOKEN USART1_TX_PC4

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_NODELABEL(fn) fn(usart1_tx_pc4)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1_tx_pc4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_HASH tD4KrmMipAUPPosulSZ7bQ0d5GgJMXQCSkGG_ws_Drg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_ORD 69
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_SUPPORTS_ORDS \
	70, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pc4 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_pinmux 1159
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_UNQUOTED serial@40013800
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_TOKEN serial_40013800
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_UPPER_TOKEN SERIAL_40013800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40013800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL(fn) fn(usart1)
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40013800_HASH Ekd_nQjwNx1R3lqiZl1FuXwHyvPZFcfnjksadzf44zc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 70
#define DT_N_S_soc_S_serial_40013800_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */ \
	68, /* /soc/pin-controller@48000000/usart1_rx_pc5 */ \
	69, /* /soc/pin-controller@48000000/usart1_tx_pc4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40013800
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40013800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40013800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id 398
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40013800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, stop_bits, 0)
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, stop_bits, 0)
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_data_bits 8
#define DT_N_S_soc_S_serial_40013800_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40013800_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_enable 0
#define DT_N_S_soc_S_serial_40013800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_invert 0
#define DT_N_S_soc_S_serial_40013800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_parity "none"
#define DT_N_S_soc_S_serial_40013800_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40013800_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40013800_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40013800_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40013800_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40013800_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, parity, 0)
#define DT_N_S_soc_S_serial_40013800_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, parity, 0)
#define DT_N_S_soc_S_serial_40013800_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PATH "/soc/pin-controller@48000000/spi2_miso_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME "spi2_miso_pb14"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME_UNQUOTED spi2_miso_pb14
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME_TOKEN spi2_miso_pb14
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME_UPPER_TOKEN SPI2_MISO_PB14

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_NODELABEL(fn) fn(spi2_miso_pb14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2_miso_pb14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_HASH ah9KZEq8pTbCt8KF_zQQvbrpYogRH_38Brc6hRZs3AY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_ORD 71
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_SUPPORTS_ORDS \
	75, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pb14 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux 965
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PATH "/soc/pin-controller@48000000/spi2_mosi_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME "spi2_mosi_pb15"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME_UNQUOTED spi2_mosi_pb15
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME_TOKEN spi2_mosi_pb15
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME_UPPER_TOKEN SPI2_MOSI_PB15

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_NODELABEL(fn) fn(spi2_mosi_pb15)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2_mosi_pb15, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_HASH _uZC7LHAtAeyivvLcEW51gAozg38rwrJ4pZkKUu1Oc4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_ORD 72
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_SUPPORTS_ORDS \
	75, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pb15 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux 997
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PATH "/soc/pin-controller@48000000/spi2_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME "spi2_nss_pb12"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME_UNQUOTED spi2_nss_pb12
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME_TOKEN spi2_nss_pb12
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME_UPPER_TOKEN SPI2_NSS_PB12

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_NODELABEL(fn) fn(spi2_nss_pb12)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2_nss_pb12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_HASH xsINVmqP9etKPFQf2W49DGysEh7j4EWHnpoQd2amtbQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_ORD 73
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_SUPPORTS_ORDS \
	75, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb12 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux 901
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PATH "/soc/pin-controller@48000000/spi2_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME "spi2_sck_pb13"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME_UNQUOTED spi2_sck_pb13
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME_TOKEN spi2_sck_pb13
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME_UPPER_TOKEN SPI2_SCK_PB13

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_NODELABEL(fn) fn(spi2_sck_pb13)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2_sck_pb13, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_HASH ckCtIJToOj4zsF_Iu00LEtdP8BWGtdTkqv1Khj_yGks

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_ORD 74
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_SUPPORTS_ORDS \
	75, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb13 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux 933
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_UNQUOTED spi@40003800
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_TOKEN spi_40003800
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_UPPER_TOKEN SPI_40003800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40003800_HASH XKwnj_54XNd9o8CRTIG33G9j_T58zD9aWx_JOqtlec4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 75
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	71, /* /soc/pin-controller@48000000/spi2_miso_pb14 */ \
	72, /* /soc/pin-controller@48000000/spi2_mosi_pb15 */ \
	73, /* /soc/pin-controller@48000000/spi2_nss_pb12 */ \
	74, /* /soc/pin-controller@48000000/spi2_sck_pb13 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_UNQUOTED spi@40003c00
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_TOKEN spi_40003c00
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_UPPER_TOKEN SPI_40003C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40003c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40003c00_FOREACH_NODELABEL(fn) fn(spi3)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40003c00_HASH 2ZRlHGHWIr4tSgRVkDzDHSiC22m9C4PVNAuFo8LU_0A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 76
#define DT_N_S_soc_S_spi_40003c00_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003c00
#define DT_N_INST_2_st_stm32_spi      DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3           DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PATH "/soc/pin-controller@48000000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME_UNQUOTED spi1_miso_pa6
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME_TOKEN spi1_miso_pa6
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME_UPPER_TOKEN SPI1_MISO_PA6

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_NODELABEL(fn) fn(spi1_miso_pa6)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_miso_pa6, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_HASH oIzkx4rl5Nz8vPvVzWtwu4yICDyfxXigFKVAM4TV97Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_ORD 77
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_SUPPORTS_ORDS \
	81, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux 197
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@48000000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME_UNQUOTED spi1_mosi_pa7
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME_TOKEN spi1_mosi_pa7
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME_UPPER_TOKEN SPI1_MOSI_PA7

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_NODELABEL(fn) fn(spi1_mosi_pa7)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_mosi_pa7, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_HASH D3H8IMt40ZTRaaH4HvFRvGhMIv98zWAp5VYqnK_Yfb0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_ORD 78
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_SUPPORTS_ORDS \
	81, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux 229
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PATH "/soc/pin-controller@48000000/spi1_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME "spi1_nss_pa4"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME_UNQUOTED spi1_nss_pa4
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME_TOKEN spi1_nss_pa4
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME_UPPER_TOKEN SPI1_NSS_PA4

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_NODELABEL(fn) fn(spi1_nss_pa4)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_nss_pa4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_HASH 7ZnR9fOOWS0__Jc0ugl7W5Hi36oenACMx8si4fIZgas

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_ORD 79
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_SUPPORTS_ORDS \
	81, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa4 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux 133
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PATH "/soc/pin-controller@48000000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME_UNQUOTED spi1_sck_pa5
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME_TOKEN spi1_sck_pa5
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME_UPPER_TOKEN SPI1_SCK_PA5

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_NODELABEL(fn) fn(spi1_sck_pa5)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_sck_pa5, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_HASH wPnATtGdEMkO_93Qu180QF012JwegU_R5_0R97wwnqc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_ORD 80
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_SUPPORTS_ORDS \
	81, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux 165
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_UNQUOTED spi@40013000
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_TOKEN spi_40013000
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_UPPER_TOKEN SPI_40013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL(fn) fn(spi1)
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40013000_HASH q04f3jPcynKDa_9eKR_V34RQn5SAL2iX4yHIC7XGkLs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 81
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	77, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	78, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	79, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	80, /* /soc/pin-controller@48000000/spi1_sck_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 82
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /usbphy
 *
 * Node identifier: DT_N_S_usbphy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE\dts\bindings\phy\usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_usbphy_PATH "/usbphy"

/* Node's name with unit-address: */
#define DT_N_S_usbphy_FULL_NAME "usbphy"
#define DT_N_S_usbphy_FULL_NAME_UNQUOTED usbphy
#define DT_N_S_usbphy_FULL_NAME_TOKEN usbphy
#define DT_N_S_usbphy_FULL_NAME_UPPER_TOKEN USBPHY

/* Node parent (/) identifier: */
#define DT_N_S_usbphy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_usbphy_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_usbphy_NODELABEL_NUM 1
#define DT_N_S_usbphy_FOREACH_NODELABEL(fn) fn(usb_fs_phy)
#define DT_N_S_usbphy_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_fs_phy, __VA_ARGS__)
#define DT_N_S_usbphy_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_usbphy_CHILD_NUM 0
#define DT_N_S_usbphy_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_usbphy_FOREACH_CHILD(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_usbphy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_usbphy_HASH E_X5Gkg3DeUJ3IGdQ884eo5YhX8B_NNNcL9cTxe39SI

/* Node's dependency ordinal: */
#define DT_N_S_usbphy_ORD 83
#define DT_N_S_usbphy_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_usbphy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_usbphy_SUPPORTS_ORDS \
	86, /* /soc/usb@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_usbphy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_usbphy
#define DT_N_NODELABEL_usb_fs_phy DT_N_S_usbphy

/* Macros for properties that are special in the specification: */
#define DT_N_S_usbphy_REG_NUM 0
#define DT_N_S_usbphy_RANGES_NUM 0
#define DT_N_S_usbphy_FOREACH_RANGE(fn) 
#define DT_N_S_usbphy_IRQ_NUM 0
#define DT_N_S_usbphy_IRQ_LEVEL 0
#define DT_N_S_usbphy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_usbphy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_usbphy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_usbphy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_usbphy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_usbphy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_UNQUOTED usb-nop-xceiv
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_TOKEN usb_nop_xceiv
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_UPPER_TOKEN USB_NOP_XCEIV
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_usbphy, compatible, 0)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_usbphy, compatible, 0)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_usbphy, compatible, 0, __VA_ARGS__)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_usbphy, compatible, 0, __VA_ARGS__)
#define DT_N_S_usbphy_P_compatible_LEN 1
#define DT_N_S_usbphy_P_compatible_EXISTS 1
#define DT_N_S_usbphy_P_zephyr_deferred_init 0
#define DT_N_S_usbphy_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_usbphy_P_wakeup_source 0
#define DT_N_S_usbphy_P_wakeup_source_EXISTS 1
#define DT_N_S_usbphy_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_usbphy_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PATH "/soc/pin-controller@48000000/usb_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FULL_NAME "usb_dm_pa11"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FULL_NAME_UNQUOTED usb_dm_pa11
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FULL_NAME_TOKEN usb_dm_pa11
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FULL_NAME_UPPER_TOKEN USB_DM_PA11

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_NODELABEL(fn) fn(usb_dm_pa11)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_dm_pa11, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_HASH w0iAGUIwuQhjSvwxY3ew_f10W1w79Au0z4Dmcg6LCcc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_ORD 84
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_SUPPORTS_ORDS \
	86, /* /soc/usb@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_dm_pa11 DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_pinmux 366
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PATH "/soc/pin-controller@48000000/usb_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FULL_NAME "usb_dp_pa12"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FULL_NAME_UNQUOTED usb_dp_pa12
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FULL_NAME_TOKEN usb_dp_pa12
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FULL_NAME_UPPER_TOKEN USB_DP_PA12

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_NODELABEL(fn) fn(usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_HASH mDzN9dOevfFvxjI3SgMXz9MsHNF5ybVV9zqjYluEi1I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_ORD 85
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_SUPPORTS_ORDS \
	86, /* /soc/usb@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_dp_pa12 DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_pinmux 398
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/usb@40005c00
 *
 * Node identifier: DT_N_S_soc_S_usb_40005c00
 *
 * Binding (compatible = st,stm32-usb):
 *   $ZEPHYR_BASE\dts\bindings\usb\st,stm32-usb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_40005c00_PATH "/soc/usb@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_40005c00_FULL_NAME "usb@40005c00"
#define DT_N_S_soc_S_usb_40005c00_FULL_NAME_UNQUOTED usb@40005c00
#define DT_N_S_soc_S_usb_40005c00_FULL_NAME_TOKEN usb_40005c00
#define DT_N_S_soc_S_usb_40005c00_FULL_NAME_UPPER_TOKEN USB_40005C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_40005c00_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usb_40005c00_NODELABEL_NUM 2
#define DT_N_S_soc_S_usb_40005c00_FOREACH_NODELABEL(fn) fn(usb) fn(zephyr_udc0)
#define DT_N_S_soc_S_usb_40005c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usb_40005c00_CHILD_NUM 0
#define DT_N_S_soc_S_usb_40005c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_usb_40005c00_HASH 80xV1Zo9Nb21_13c9S9_bF8QGZR2Fp7zcRZfGeZahl0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_40005c00_ORD 86
#define DT_N_S_soc_S_usb_40005c00_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_40005c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	83, /* /usbphy */ \
	84, /* /soc/pin-controller@48000000/usb_dm_pa11 */ \
	85, /* /soc/pin-controller@48000000/usb_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40005c00_EXISTS 1
#define DT_N_INST_0_st_stm32_usb   DT_N_S_soc_S_usb_40005c00
#define DT_N_NODELABEL_usb         DT_N_S_soc_S_usb_40005c00
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_40005c00_REG_NUM 1
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usb_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_usb_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_40005c00_IRQ_NUM 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq 75
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_40005c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_irq DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_priority DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_CONTROLLER DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usb_40005c00_COMPAT_MATCHES_st_stm32_usb 1
#define DT_N_S_soc_S_usb_40005c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_usb_40005c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_COMPAT_MODEL_IDX_0 "stm32-usb"
#define DT_N_S_soc_S_usb_40005c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40005c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usb_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupts {75 /* 0x4b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_0 75
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_ram_size 512
#define DT_N_S_soc_S_usb_40005c00_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_phys DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40005c00_P_phys_IDX_0 DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40005c00_P_phys_IDX_0_PH DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40005c00_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_phys_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, phys, 0)
#define DT_N_S_soc_S_usb_40005c00_P_phys_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, phys, 0)
#define DT_N_S_soc_S_usb_40005c00_P_phys_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_phys_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, clocks, 0)
#define DT_N_S_soc_S_usb_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, clocks, 0)
#define DT_N_S_soc_S_usb_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_40005c00_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_status "okay"
#define DT_N_S_soc_S_usb_40005c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usb_40005c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_40005c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_40005c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usb_40005c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40005c00_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, status, 0)
#define DT_N_S_soc_S_usb_40005c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, status, 0)
#define DT_N_S_soc_S_usb_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_status_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_compatible {"st,stm32-usb"}
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0 "st,stm32-usb"
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usb
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_usb
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USB
#define DT_N_S_soc_S_usb_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, compatible, 0)
#define DT_N_S_soc_S_usb_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, compatible, 0)
#define DT_N_S_soc_S_usb_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names {"usb"}
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0 "usb"
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0_STRING_UNQUOTED usb
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0_STRING_TOKEN usb
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USB
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, interrupt_names, 0)
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, interrupt_names, 0)
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usb_40005c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_usb_40005c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usb_40005c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_UNQUOTED watchdog@40002c00
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_TOKEN watchdog_40002c00
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_UPPER_TOKEN WATCHDOG_40002C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40002c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL(fn) fn(wwdg)
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(wwdg, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_40002c00_HASH NKEpaR6mtDKOWUZ_R2tC3uFejChIy267XTRT9LC__CA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 87
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_UNQUOTED watchdog@40003000
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_TOKEN watchdog_40003000
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_UPPER_TOKEN WATCHDOG_40003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL(fn) fn(iwdg)
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(iwdg, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_40003000_HASH ZgrqJ_c2LlWOgbyPiYriITNa7e_ieqQvmB0duI6_QGU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 88
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_ALIAS_watchdog0          DT_N_S_soc_S_watchdog_40003000
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_IRQ_LEVEL 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_PATH "/soc/flash-controller@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME "flash-controller@40022000"
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_UNQUOTED flash-controller@40022000
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_TOKEN flash_controller_40022000
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_40022000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40022000_HASH zbmvNSGM4VOJM0v0g9IYHqSKWvouTrb8IP0EW85xJrs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_ORD 89
#define DT_N_S_soc_S_flash_controller_40022000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_SUPPORTS_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32f1_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32f1_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1 "stm32f1-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte 85
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32f1-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32f1-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32f1-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_TOKEN st_stm32f1_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32F1_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PATH "/soc/flash-controller@40022000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME "flash@8000000"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_UNQUOTED flash@8000000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_TOKEN flash_8000000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_UPPER_TOKEN FLASH_8000000

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_HASH jS_k3V146QRc4ZjeAWhuWFk9WTzfrFWauJLjP4fPHoc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD 90
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REQUIRES_ORDS \
	89, /* /soc/flash-controller@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_SUPPORTS_ORDS \
	91, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time 40
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@40022000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@40022000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_HASH r8CF6c7oNqk__u_6kUfBaNdcHX6X_OrDziksYhz5Oa8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD 91
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	92, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FULL_NAME "partition@3e800"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FULL_NAME_UNQUOTED partition@3e800
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FULL_NAME_TOKEN partition_3e800
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FULL_NAME_UPPER_TOKEN PARTITION_3E800

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_HASH 4DOtcU_ULb0ihN8oUTefGXPK7fBaMsmvcu2izhwniIk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_ORD 92
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REQUIRES_ORDS \
	91, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_VAL_ADDRESS 256000 /* 0x3e800 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_VAL_SIZE 6144 /* 0x1800 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg {256000 /* 0x3e800 */, 6144 /* 0x1800 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_0 256000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_1 6144
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303dlhc-accel@19
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19
 *
 * Binding (compatible = st,lis2dh):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,lis2dh-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_PATH "/soc/i2c@40005400/lsm303dlhc-accel@19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FULL_NAME "lsm303dlhc-accel@19"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FULL_NAME_UNQUOTED lsm303dlhc-accel@19
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FULL_NAME_TOKEN lsm303dlhc_accel_19
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FULL_NAME_UPPER_TOKEN LSM303DLHC_ACCEL_19

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_PARENT DT_N_S_soc_S_i2c_40005400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_NODELABEL(fn) fn(lsm303dlhc_accel)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_NODELABEL_VARGS(fn, ...) fn(lsm303dlhc_accel, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_HASH eW46yPBdvnZSoaFsCbJx_DrgTTojjLF4j17wJzzO0IQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_ORD 93
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_REQUIRES_ORDS \
	18, /* /soc/i2c@40005400 */ \
	40, /* /soc/pin-controller@48000000/gpio@48001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_EXISTS 1
#define DT_N_ALIAS_accel0               DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19
#define DT_N_INST_0_st_lis2dh           DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19
#define DT_N_INST_0_st_lsm303dlhc_accel DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19
#define DT_N_NODELABEL_lsm303dlhc_accel DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19

/* Bus info (controller: '/soc/i2c@40005400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_REG_IDX_0_VAL_ADDRESS 25 /* 0x19 */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MATCHES_st_lis2dh 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MODEL_IDX_0 "lis2dh"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MATCHES_st_lsm303dlhc_accel 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_COMPAT_MODEL_IDX_1 "lsm303dlhc-accel"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_reg {25 /* 0x19 */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_reg_IDX_0 25
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible {"st,lis2dh", "st,lsm303dlhc-accel"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_0 "st,lis2dh"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_0_STRING_UNQUOTED st,lis2dh
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_0_STRING_TOKEN st_lis2dh
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LIS2DH
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_1 "st,lsm303dlhc-accel"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_1_STRING_UNQUOTED st,lsm303dlhc-accel
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_1_STRING_TOKEN st_lsm303dlhc_accel
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_LSM303DLHC_ACCEL
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_VAL_pin 5
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int1_gpio_config 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int1_gpio_config_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int1_gpio_config_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int1_gpio_config_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int1_gpio_config_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int2_gpio_config 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int2_gpio_config_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int2_gpio_config_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int2_gpio_config_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_int2_gpio_config_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_disconnect_sdo_sa0_pull_up 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_disconnect_sdo_sa0_pull_up_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_on_int1 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_on_int1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_no_latch 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_no_latch_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_mode 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19_P_anym_mode_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303dlhc-magn@1e
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e
 *
 * Binding (compatible = st,lsm303dlhc-magn):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,lsm303dlhc-magn.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_PATH "/soc/i2c@40005400/lsm303dlhc-magn@1e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FULL_NAME "lsm303dlhc-magn@1e"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FULL_NAME_UNQUOTED lsm303dlhc-magn@1e
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FULL_NAME_TOKEN lsm303dlhc_magn_1e
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FULL_NAME_UPPER_TOKEN LSM303DLHC_MAGN_1E

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_PARENT DT_N_S_soc_S_i2c_40005400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_NODELABEL(fn) fn(lsm303dlhc_magn)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_NODELABEL_VARGS(fn, ...) fn(lsm303dlhc_magn, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_HASH SF7pTI_vD0FaTivmLECGF_KheEZz43_hxOTN_dfK36Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_ORD 94
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_REQUIRES_ORDS \
	18, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_EXISTS 1
#define DT_N_ALIAS_magn0               DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e
#define DT_N_INST_0_st_lsm303dlhc_magn DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e
#define DT_N_NODELABEL_lsm303dlhc_magn DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e

/* Bus info (controller: '/soc/i2c@40005400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_REG_IDX_0_VAL_ADDRESS 30 /* 0x1e */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_COMPAT_MATCHES_st_lsm303dlhc_magn 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_COMPAT_MODEL_IDX_0 "lsm303dlhc-magn"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible {"st,lsm303dlhc-magn"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_IDX_0 "st,lsm303dlhc-magn"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_IDX_0_STRING_UNQUOTED st,lsm303dlhc-magn
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_IDX_0_STRING_TOKEN st_lsm303dlhc_magn
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LSM303DLHC_MAGN
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_reg {30 /* 0x1e */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_reg_IDX_0 30
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PATH "/soc/pin-controller@48000000/gpio@48000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME "gpio@48000400"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME_UNQUOTED gpio@48000400
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME_TOKEN gpio_48000400
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME_UPPER_TOKEN GPIO_48000400

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_HASH _ITOixrnsdulY77mYPcfDq4R1DIXVligCgZL7jMBzZg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_ORD 95
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_ADDRESS 1207960576 /* 0x48000400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg {1207960576 /* 0x48000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0 1207960576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PATH "/soc/pin-controller@48000000/gpio@48001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FULL_NAME "gpio@48001400"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FULL_NAME_UNQUOTED gpio@48001400
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FULL_NAME_TOKEN gpio_48001400
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FULL_NAME_UPPER_TOKEN GPIO_48001400

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_NODELABEL(fn) fn(gpiof)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiof, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_HASH bmSOeZi25YolypCkHDKjLQJ9ODqu57WnBB3t7MFcjqM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_ORD 96
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REQUIRES_ORDS \
	8, /* /soc/rcc@40021000 */ \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_ADDRESS 1207964672 /* 0x48001400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg {1207964672 /* 0x48001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_0 1207964672
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus 20
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME_UNQUOTED rtc@40002800
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME_TOKEN rtc_40002800
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME_UPPER_TOKEN RTC_40002800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40002800_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM 1
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_rtc_40002800_HASH gMDUpS7Ndbl4XKI6XlHTk7n7PIqWK98QhTUf_xffseI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 97
#define DT_N_S_soc_S_rtc_40002800_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS \
	98, /* /soc/rtc@40002800/backup_regs */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_40002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_alarms_count 2
#define DT_N_S_soc_S_rtc_40002800_P_alarms_count_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_alrm_exti_line 17
#define DT_N_S_soc_S_rtc_40002800_P_alrm_exti_line_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bus 3
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bits 157728
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800/backup_regs
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800_S_backup_regs
 *
 * Binding (compatible = st,stm32-bbram):
 *   $ZEPHYR_BASE\dts\bindings\memory-controllers\st,stm32-bbram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PATH "/soc/rtc@40002800/backup_regs"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME "backup_regs"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME_UNQUOTED backup_regs
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME_TOKEN backup_regs
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME_UPPER_TOKEN BACKUP_REGS

/* Node parent (/soc/rtc@40002800) identifier: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PARENT DT_N_S_soc_S_rtc_40002800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_NODELABEL(fn) fn(bbram)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbram, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_HASH 87KLygauUkNGUe3q_y8ziT69orcsnQqP1AwsJG8Gz24

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD 98
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REQUIRES_ORDS \
	97, /* /soc/rtc@40002800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_EXISTS 1
#define DT_N_INST_0_st_stm32_bbram DT_N_S_soc_S_rtc_40002800_S_backup_regs
#define DT_N_NODELABEL_bbram       DT_N_S_soc_S_rtc_40002800_S_backup_regs

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REG_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_LEVEL 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MATCHES_st_stm32_bbram 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0 "stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs 16
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible {"st,stm32-bbram"}
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0 "st,stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_TOKEN st_stm32_bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_BBRAM
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_UNQUOTED timers@40000000
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_TOKEN timers_40000000
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_UPPER_TOKEN TIMERS_40000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL(fn) fn(timers2)
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers2, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000000_HASH EG81bdVGBcHLEHOWL0pmGPFAUziNY8yKUHEsHXKaWCc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 99
#define DT_N_S_soc_S_timers_40000000_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	100, /* /soc/timers@40000000/counter */ \
	101, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id 512
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PATH "/soc/timers@40000000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000000_S_counter_HASH q1HYCxKR_QqakI62hwcbYK3CrWp5E_XbPwXUySU4se8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD 100
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REQUIRES_ORDS \
	99, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_HASH EPAdjmCelZ_p_2x7j2JfW0691g5_Ul9BLhqJG9tnJMk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 101
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	99, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_UNQUOTED timers@40000400
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_TOKEN timers_40000400
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_UPPER_TOKEN TIMERS_40000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL(fn) fn(timers3)
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000400_HASH baeUapzy1gNL2E23NOiz9371NQp1G8KhvyeXIcEPqLk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 102
#define DT_N_S_soc_S_timers_40000400_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	103, /* /soc/timers@40000400/counter */ \
	104, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id 513
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000400_S_counter_HASH JNkHbJAdpxqum04dZjR7ujFGNxo62pj2eB31ikv0Phc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 103
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	102, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_HASH 3XEqw4Q0MqUTTpvQ0Yrht2rVkAAPsKyjdgccEVU8gEE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 104
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	102, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_UNQUOTED timers@40000800
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_TOKEN timers_40000800
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_UPPER_TOKEN TIMERS_40000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000800_FOREACH_NODELABEL(fn) fn(timers4)
#define DT_N_S_soc_S_timers_40000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000800_HASH VTBFi6bYiewunKr1vKL59kMmaq2wTI7eroMWbGtK2dw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 105
#define DT_N_S_soc_S_timers_40000800_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	106, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id 514
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_HASH rmmRd1gBchFTmlpcPkj2kPN2S9h0o7_bVDPViAglyik

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 106
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	105, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UNQUOTED timers@40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_TOKEN timers_40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UPPER_TOKEN TIMERS_40001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL(fn) fn(timers6)
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers6, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001000_HASH Nsz_iy2H8UvqHZMouFTv3bvFrOuL3LyjaTTN24v0eBQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 107
#define DT_N_S_soc_S_timers_40001000_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	108, /* /soc/timers@40001000/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id 516
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PATH "/soc/timers@40001000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001000_S_counter_HASH kRqNwCO_GFQ9B_IU80aWEsZniZ2xLsueygEKHK_oRqE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD 108
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REQUIRES_ORDS \
	107, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40001000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_UNQUOTED timers@40001400
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_TOKEN timers_40001400
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_UPPER_TOKEN TIMERS_40001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001400_FOREACH_NODELABEL(fn) fn(timers7)
#define DT_N_S_soc_S_timers_40001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001400_HASH NWGZgzDJgqZSuO0DPWROIlkjRWjN3_VzkmbGsEAbECw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 109
#define DT_N_S_soc_S_timers_40001400_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	110, /* /soc/timers@40001400/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 28
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id 517
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PATH "/soc/timers@40001400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001400_S_counter_HASH yUMrsaqgcXElOUnLnHc7vIdLGcToiUBEnmAPHwvJ0BA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD 110
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REQUIRES_ORDS \
	109, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40001400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_UNQUOTED timers@40012c00
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_TOKEN timers_40012c00
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_UPPER_TOKEN TIMERS_40012C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL(fn) fn(timers1)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_timers_40012c00_HASH 3LegaBe_XYAmus4r7JdPqj5bScAsVFzbsAzhohL9Bqc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 111
#define DT_N_S_soc_S_timers_40012c00_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	113, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id 395
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "okay"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PATH "/soc/pin-controller@48000000/tim1_ch1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME "tim1_ch1_pa8"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME_UNQUOTED tim1_ch1_pa8
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME_TOKEN tim1_ch1_pa8
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME_UPPER_TOKEN TIM1_CH1_PA8

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_NODELABEL(fn) fn(tim1_ch1_pa8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_NODELABEL_VARGS(fn, ...) fn(tim1_ch1_pa8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_HASH ev7rfw3F9d_c8cJShZDLlpOFtKplU6aWu6DaIHB7sPE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_ORD 112
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REQUIRES_ORDS \
	9, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_SUPPORTS_ORDS \
	113, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pa8 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux 262
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL(fn) fn(pwm1)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_HASH g97nbdWpfWs0szJYsIofhjyur31j3pJteaFY2J9NhwY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 113
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	111, /* /soc/timers@40012c00 */ \
	112, /* /soc/pin-controller@48000000/tim1_ch1_pa8 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm
#define DT_N_NODELABEL_pwm1      DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_PATH "/soc/timers@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_FULL_NAME "timers@40013400"
#define DT_N_S_soc_S_timers_40013400_FULL_NAME_UNQUOTED timers@40013400
#define DT_N_S_soc_S_timers_40013400_FULL_NAME_TOKEN timers_40013400
#define DT_N_S_soc_S_timers_40013400_FULL_NAME_UPPER_TOKEN TIMERS_40013400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40013400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40013400_FOREACH_NODELABEL(fn) fn(timers8)
#define DT_N_S_soc_S_timers_40013400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40013400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40013400_HASH FF_euBmA_AoGdsnKOZTe7TyZCUD7Zw41dsQG3AFr1KM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_ORD 114
#define DT_N_S_soc_S_timers_40013400_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_SUPPORTS_ORDS \
	115, /* /soc/timers@40013400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40013400
#define DT_N_NODELABEL_timers8      DT_N_S_soc_S_timers_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_REG_NUM 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40013400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_CONTROLLER DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_CONTROLLER DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_CONTROLLER DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timers_40013400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_VAL_id 397
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, resets, 0)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, resets, 0)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40013400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40013400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, status, 0)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, status, 0)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40013400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40013400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PATH "/soc/timers@40013400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40013400) identifier: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PARENT DT_N_S_soc_S_timers_40013400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_HASH _RxktOOKFZWf2oilmHATi7Qrz3qCO_0xGy1qTQJh3SE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_ORD 115
#define DT_N_S_soc_S_timers_40013400_S_pwm_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REQUIRES_ORDS \
	114, /* /soc/timers@40013400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40013400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_UNQUOTED timers@40014000
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_TOKEN timers_40014000
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_UPPER_TOKEN TIMERS_40014000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014000_FOREACH_NODELABEL(fn) fn(timers15)
#define DT_N_S_soc_S_timers_40014000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers15, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014000_HASH lq5p3vgPpp0Pc1e97jH3shzpysrGZocBMMy1grfenUs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 116
#define DT_N_S_soc_S_timers_40014000_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	117, /* /soc/timers@40014000/counter */ \
	118, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers15     DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id 400
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014000_S_counter_HASH HTxmpxrEMdGrjqKzwYEQ3Db8lHf9V4eSc5b5awosPW0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 117
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	116, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_HASH kSLo0yu1rvkKjWd1KPNaOZTkLqT1fXRh8ItGZQcov88

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 118
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	116, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_UNQUOTED timers@40014400
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_TOKEN timers_40014400
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_UPPER_TOKEN TIMERS_40014400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL(fn) fn(timers16)
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers16, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014400_HASH LhbzUUvofdpe9RJBdWKw1tw8MqV4XObGHJe29iNM0Lc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 119
#define DT_N_S_soc_S_timers_40014400_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	120, /* /soc/timers@40014400/counter */ \
	121, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id 401
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014400_S_counter_HASH p37X7wit0iPn8X9v8y4Gj2t07AN6oeaaeHeLb6OojSE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 120
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	119, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_5_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_HASH qSncIfFrKmBeFCfySGntGi5dvRM62NXtfq0Z60Th_Tw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 121
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	119, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_UNQUOTED timers@40014800
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_TOKEN timers_40014800
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_UPPER_TOKEN TIMERS_40014800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL(fn) fn(timers17)
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers17, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014800_HASH HFfK32JNDgTzZmhucfswXs63t4LSBAvBFi__WAnpexw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 122
#define DT_N_S_soc_S_timers_40014800_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	123, /* /soc/timers@40014800/counter */ \
	124, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id 402
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014800_S_counter_HASH S6y2pTOmJHjQSdFjECAm7CIldgBp6UkB1xRx45LXe9E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 123
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	122, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_6_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_HASH pP_vpmBmH6Uc99dxi1iL0vcGxl00Y6rTzAdbQLvVodY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 124
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	122, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40015000
 *
 * Node identifier: DT_N_S_soc_S_timers_40015000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40015000_PATH "/soc/timers@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40015000_FULL_NAME "timers@40015000"
#define DT_N_S_soc_S_timers_40015000_FULL_NAME_UNQUOTED timers@40015000
#define DT_N_S_soc_S_timers_40015000_FULL_NAME_TOKEN timers_40015000
#define DT_N_S_soc_S_timers_40015000_FULL_NAME_UPPER_TOKEN TIMERS_40015000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40015000_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40015000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40015000_FOREACH_NODELABEL(fn) fn(timers20)
#define DT_N_S_soc_S_timers_40015000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers20, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40015000_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40015000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40015000_S_pwm)
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000_S_pwm)
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40015000_HASH LpJX1iE5ELGMwCZR0TF5Eu9Fdba56_rrwUe9pb_55Pw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40015000_ORD 125
#define DT_N_S_soc_S_timers_40015000_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40021000 */ \
	61, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40015000_SUPPORTS_ORDS \
	126, /* /soc/timers@40015000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40015000_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40015000
#define DT_N_NODELABEL_timers20      DT_N_S_soc_S_timers_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40015000_REG_NUM 1
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40015000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq 77
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq 78
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq 79
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq 80
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40015000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_CONTROLLER DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_CONTROLLER DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_CONTROLLER DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timers_40015000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bus 24
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000, clocks, 0)
#define DT_N_S_soc_S_timers_40015000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000, clocks, 0)
#define DT_N_S_soc_S_timers_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40015000_P_resets_IDX_0_VAL_id 404
#define DT_N_S_soc_S_timers_40015000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000, resets, 0)
#define DT_N_S_soc_S_timers_40015000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000, resets, 0)
#define DT_N_S_soc_S_timers_40015000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40015000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40015000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_status "disabled"
#define DT_N_S_soc_S_timers_40015000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40015000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40015000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000, status, 0)
#define DT_N_S_soc_S_timers_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000, status, 0)
#define DT_N_S_soc_S_timers_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000, compatible, 0)
#define DT_N_S_soc_S_timers_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000, compatible, 0)
#define DT_N_S_soc_S_timers_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts {77 /* 0x4d */, 0 /* 0x0 */, 78 /* 0x4e */, 0 /* 0x0 */, 79 /* 0x4f */, 0 /* 0x0 */, 80 /* 0x50 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_0 77
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_2 78
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_4 79
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_6 80
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40015000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40015000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40015000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40015000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_PATH "/soc/timers@40015000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40015000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40015000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40015000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40015000) identifier: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_PARENT DT_N_S_soc_S_timers_40015000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40015000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40015000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_HASH ZiOoPOPco1gS_Yql7q3heBjiHZzjtfQv2TX4baOCUYA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_ORD 126
#define DT_N_S_soc_S_timers_40015000_S_pwm_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_REQUIRES_ORDS \
	125, /* /soc/timers@40015000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40015000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40015000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40015000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40015000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40015000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40015000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40022000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_canbus                  DT_N_S_soc_S_can_40006400
#define DT_CHOSEN_zephyr_canbus_EXISTS           1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_usb_40005c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001000_S_counter) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40001400_S_counter) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40013400_S_pwm) fn(DT_N_S_soc_S_timers_40015000) fn(DT_N_S_soc_S_timers_40015000_S_pwm) fn(DT_N_S_soc_S_adc_50000000) fn(DT_N_S_soc_S_adc_50000100) fn(DT_N_S_soc_S_dma_40020400) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_leds_S_led_7) fn(DT_N_S_leds_S_led_8) fn(DT_N_S_leds_S_led_9) fn(DT_N_S_leds_S_led_10) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3) fn(DT_N_S_gpio_keys_S_button_4) fn(DT_N_S_hid_dev_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_usb_40005c00) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_adc_50000000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_leds_S_led_7) fn(DT_N_S_leds_S_led_8) fn(DT_N_S_leds_S_led_9) fn(DT_N_S_leds_S_led_10) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) fn(DT_N_S_gpio_keys_S_button_3) fn(DT_N_S_gpio_keys_S_button_4) fn(DT_N_S_hid_dev_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40015000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000100, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_leds_S_led_7, __VA_ARGS__) fn(DT_N_S_leds_S_led_8, __VA_ARGS__) fn(DT_N_S_leds_S_led_9, __VA_ARGS__) fn(DT_N_S_leds_S_led_10, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__) fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_can_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_leds_S_led_7, __VA_ARGS__) fn(DT_N_S_leds_S_led_8, __VA_ARGS__) fn(DT_N_S_leds_S_led_9, __VA_ARGS__) fn(DT_N_S_leds_S_led_10, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_4, __VA_ARGS__) fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32f3discovery 1
#define DT_COMPAT_HAS_OKAY_st_stm32f303 1
#define DT_COMPAT_HAS_OKAY_st_stm32f3 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f1_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32f3_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_watchdog 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_lsm303dlhc_magn 1
#define DT_COMPAT_HAS_OKAY_st_lis2dh 1
#define DT_COMPAT_HAS_OKAY_st_lsm303dlhc_accel 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dac 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usb 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_bbram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_bxcan 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dma_v2bis 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_adc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32f0_pll_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_temp_cal 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vref 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vbat 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ccm 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_zephyr_hid_device 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32f3discovery_NUM_OKAY 1
#define DT_N_INST_st_stm32f303_NUM_OKAY 1
#define DT_N_INST_st_stm32f3_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f1_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_st_stm32f3_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 6
#define DT_N_INST_st_stm32_watchdog_NUM_OKAY 1
#define DT_N_INST_st_stm32_usart_NUM_OKAY 2
#define DT_N_INST_st_stm32_uart_NUM_OKAY 3
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 2
#define DT_N_INST_st_lsm303dlhc_magn_NUM_OKAY 1
#define DT_N_INST_st_lis2dh_NUM_OKAY 1
#define DT_N_INST_st_lsm303dlhc_accel_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 2
#define DT_N_INST_st_stm32_spi_NUM_OKAY 2
#define DT_N_INST_st_stm32_dac_NUM_OKAY 1
#define DT_N_INST_st_stm32_usb_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_bbram_NUM_OKAY 1
#define DT_N_INST_st_stm32_bxcan_NUM_OKAY 1
#define DT_N_INST_st_stm32_dma_v2bis_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 1
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 1
#define DT_N_INST_st_stm32_adc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32f0_pll_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_temp_cal_NUM_OKAY 1
#define DT_N_INST_st_stm32_vref_NUM_OKAY 1
#define DT_N_INST_st_stm32_vbat_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 1
#define DT_N_INST_st_stm32_ccm_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_zephyr_hid_device_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32f3discovery(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32f3discovery(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f3discovery(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f3discovery(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f303(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32f303(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f303(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f303(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f3(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32f3(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f1_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32f1_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f1_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f1_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f3_rcc(fn) fn(DT_N_S_soc_S_rcc_40021000)
#define DT_FOREACH_OKAY_VARGS_st_stm32f3_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f3_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f3_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_48000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303dlhc_magn(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lsm303dlhc_magn(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303dlhc_magn(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303dlhc_magn(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2dh(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lis2dh(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2dh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2dh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303dlhc_accel(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lsm303dlhc_accel(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303dlhc_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303dlhc_accel(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303dlhc_accel(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dac(fn) fn(DT_N_S_soc_S_dac_40007400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dac(fn, ...) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usb(fn) fn(DT_N_S_soc_S_usb_40005c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usb(fn, ...) fn(DT_N_S_soc_S_usb_40005c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_bbram(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_FOREACH_OKAY_VARGS_st_stm32_bbram(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_bbram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_bbram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_bxcan(fn) fn(DT_N_S_soc_S_can_40006400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_bxcan(fn, ...) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_bxcan(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_bxcan(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dma_v2bis(fn) fn(DT_N_S_soc_S_dma_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dma_v2bis(fn, ...) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dma_v2bis(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dma_v2bis(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40012c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_adc(fn) fn(DT_N_S_soc_S_adc_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_adc(fn, ...) fn(DT_N_S_soc_S_adc_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_hse_clock(fn) fn(DT_N_S_clocks_S_clk_hse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_hse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_hse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_lsi)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f0_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32f0_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f0_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f0_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_temp_cal(fn) fn(DT_N_S_dietemp)
#define DT_FOREACH_OKAY_VARGS_st_stm32_temp_cal(fn, ...) fn(DT_N_S_dietemp, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_temp_cal(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_temp_cal(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vref(fn) fn(DT_N_S_vref)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vref(fn, ...) fn(DT_N_S_vref, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vref(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vref(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vbat(fn) fn(DT_N_S_vbat)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vbat(fn, ...) fn(DT_N_S_vbat, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vbat(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vbat(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_usbphy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_usbphy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_memory_10000000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_memory_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ccm(fn) fn(DT_N_S_memory_10000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ccm(fn, ...) fn(DT_N_S_memory_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_hid_device(fn) fn(DT_N_S_hid_dev_0)
#define DT_FOREACH_OKAY_VARGS_zephyr_hid_device(fn, ...) fn(DT_N_S_hid_dev_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_hid_device(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_hid_device(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_st_lsm303dlhc_magn_BUS_i2c 1
#define DT_COMPAT_st_lis2dh_BUS_i2c 1
#define DT_COMPAT_st_lsm303dlhc_accel_BUS_i2c 1
